{"version":3,"file":null,"sources":["../node_modules/async/dist/async.js","../node_modules/web3-provider-engine/util/random-id.js","../node_modules/xtend/immutable.js","../node_modules/web3-provider-engine/util/create-payload.js","../node_modules/web3-provider-engine/subproviders/subprovider.js","../node_modules/qs/lib/utils.js","../node_modules/qs/lib/stringify.js","../node_modules/qs/lib/parse.js","../node_modules/qs/lib/index.js","../node_modules/global/window.js","../node_modules/is-function/index.js","../node_modules/trim/index.js","../node_modules/for-each/index.js","../node_modules/parse-headers/parse-headers.js","../node_modules/xhr/index.js","../node_modules/web3-provider-engine/subproviders/rpc.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (factory((global.async = global.async || {})));\n}(this, function (exports) { 'use strict';\n\n    /**\n     * A faster alternative to `Function#apply`, this function invokes `func`\n     * with the `this` binding of `thisArg` and the arguments of `args`.\n     *\n     * @private\n     * @param {Function} func The function to invoke.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} args The arguments to invoke `func` with.\n     * @returns {*} Returns the result of `func`.\n     */\n    function apply(func, thisArg, args) {\n      var length = args.length;\n      switch (length) {\n        case 0: return func.call(thisArg);\n        case 1: return func.call(thisArg, args[0]);\n        case 2: return func.call(thisArg, args[0], args[1]);\n        case 3: return func.call(thisArg, args[0], args[1], args[2]);\n      }\n      return func.apply(thisArg, args);\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    var funcTag = '[object Function]';\n    var genTag = '[object GeneratorFunction]';\n    /** Used for built-in method references. */\n    var objectProto = Object.prototype;\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return !!value && typeof value == 'object';\n    }\n\n    /** `Object#toString` result references. */\n    var symbolTag = '[object Symbol]';\n\n    /** Used for built-in method references. */\n    var objectProto$1 = Object.prototype;\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString$1 = objectProto$1.toString;\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString$1.call(value) == symbolTag);\n    }\n\n    /** Used as references for various `Number` constants. */\n    var NAN = 0 / 0;\n\n    /** Used to match leading and trailing whitespace. */\n    var reTrim = /^\\s+|\\s+$/g;\n\n    /** Used to detect bad signed hexadecimal string values. */\n    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n    /** Used to detect binary string values. */\n    var reIsBinary = /^0b[01]+$/i;\n\n    /** Used to detect octal string values. */\n    var reIsOctal = /^0o[0-7]+$/i;\n\n    /** Built-in method references without a dependency on `root`. */\n    var freeParseInt = parseInt;\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    var INFINITY = 1 / 0;\n    var MAX_INTEGER = 1.7976931348623157e+308;\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /** Used as the `TypeError` message for \"Functions\" methods. */\n    var FUNC_ERROR_TEXT = 'Expected a function';\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeMax = Math.max;\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, array);\n          case 1: return func.call(this, args[0], array);\n          case 2: return func.call(this, args[0], args[1], array);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = array;\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    function initialParams (fn) {\n        return rest(function (args /*..., callback*/) {\n            var callback = args.pop();\n            fn.call(this, args, callback);\n        });\n    }\n\n    function applyEach$1(eachfn) {\n        return rest(function (fns, args) {\n            var go = initialParams(function (args, callback) {\n                var that = this;\n                return eachfn(fns, function (fn, cb) {\n                    fn.apply(that, args.concat([cb]));\n                }, callback);\n            });\n            if (args.length) {\n                return go.apply(this, args);\n            } else {\n                return go;\n            }\n        });\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a\n     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n     * Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /** Used as references for various `Number` constants. */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length,\n     *  else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value)) && !isFunction(value);\n    }\n\n    /**\n     * A method that returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    function once(fn) {\n        return function () {\n            if (fn === null) return;\n            var callFn = fn;\n            fn = null;\n            callFn.apply(this, arguments);\n        };\n    }\n\n    var iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;\n\n    function getIterator (coll) {\n        return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();\n    }\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeGetPrototype = Object.getPrototypeOf;\n\n    /**\n     * Gets the `[[Prototype]]` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {null|Object} Returns the `[[Prototype]]`.\n     */\n    function getPrototype(value) {\n      return nativeGetPrototype(Object(value));\n    }\n\n    /** Used for built-in method references. */\n    var objectProto$2 = Object.prototype;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto$2.hasOwnProperty;\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n      // that are composed entirely of index properties, return `false` for\n      // `hasOwnProperty` checks of them.\n      return object != null &&\n        (hasOwnProperty.call(object, key) ||\n          (typeof object == 'object' && key in object && getPrototype(object) === null));\n    }\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeKeys = Object.keys;\n\n    /**\n     * The base implementation of `_.keys` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      return nativeKeys(Object(object));\n    }\n\n    /**\n     * The base implementation of `_.times` without support for iteratee shorthands\n     * or max array length checks.\n     *\n     * @private\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     */\n    function baseTimes(n, iteratee) {\n      var index = -1,\n          result = Array(n);\n\n      while (++index < n) {\n        result[index] = iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /** `Object#toString` result references. */\n    var argsTag = '[object Arguments]';\n\n    /** Used for built-in method references. */\n    var objectProto$3 = Object.prototype;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty$1 = objectProto$3.hasOwnProperty;\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString$2 = objectProto$3.toString;\n\n    /** Built-in value references. */\n    var propertyIsEnumerable = objectProto$3.propertyIsEnumerable;\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty$1.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString$2.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @type {Function}\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /** `Object#toString` result references. */\n    var stringTag = '[object String]';\n\n    /** Used for built-in method references. */\n    var objectProto$4 = Object.prototype;\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString$3 = objectProto$4.toString;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString$3.call(value) == stringTag);\n    }\n\n    /**\n     * Creates an array of index keys for `object` values of arrays,\n     * `arguments` objects, and strings, otherwise `null` is returned.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array|null} Returns index keys, else `null`.\n     */\n    function indexKeys(object) {\n      var length = object ? object.length : undefined;\n      if (isLength(length) &&\n          (isArray(object) || isString(object) || isArguments(object))) {\n        return baseTimes(length, String);\n      }\n      return null;\n    }\n\n    /** Used as references for various `Number` constants. */\n    var MAX_SAFE_INTEGER$1 = 9007199254740991;\n\n    /** Used to detect unsigned integer values. */\n    var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER$1 : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /** Used for built-in method references. */\n    var objectProto$5 = Object.prototype;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;\n\n      return value === proto;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      var isProto = isPrototype(object);\n      if (!(isProto || isArrayLike(object))) {\n        return baseKeys(object);\n      }\n      var indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      for (var key in object) {\n        if (baseHas(object, key) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(isProto && key == 'constructor')) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    function createArrayIterator(coll) {\n        var i = -1;\n        var len = coll.length;\n        return function next() {\n            return ++i < len ? { value: coll[i], key: i } : null;\n        };\n    }\n\n    function createES2015Iterator(iterator) {\n        var i = -1;\n        return function next() {\n            var item = iterator.next();\n            if (item.done) return null;\n            i++;\n            return { value: item.value, key: i };\n        };\n    }\n\n    function createObjectIterator(obj) {\n        var okeys = keys(obj);\n        var i = -1;\n        var len = okeys.length;\n        return function next() {\n            var key = okeys[++i];\n            return i < len ? { value: obj[key], key: key } : null;\n        };\n    }\n\n    function iterator(coll) {\n        if (isArrayLike(coll)) {\n            return createArrayIterator(coll);\n        }\n\n        var iterator = getIterator(coll);\n        return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n    }\n\n    function onlyOnce(fn) {\n        return function () {\n            if (fn === null) throw new Error(\"Callback was already called.\");\n            var callFn = fn;\n            fn = null;\n            callFn.apply(this, arguments);\n        };\n    }\n\n    function _eachOfLimit(limit) {\n        return function (obj, iteratee, callback) {\n            callback = once(callback || noop);\n            if (limit <= 0 || !obj) {\n                return callback(null);\n            }\n            var nextElem = iterator(obj);\n            var done = false;\n            var running = 0;\n\n            function iterateeCallback(err) {\n                running -= 1;\n                if (err) {\n                    done = true;\n                    callback(err);\n                } else if (done && running <= 0) {\n                    return callback(null);\n                } else {\n                    replenish();\n                }\n            }\n\n            function replenish() {\n                while (running < limit && !done) {\n                    var elem = nextElem();\n                    if (elem === null) {\n                        done = true;\n                        if (running <= 0) {\n                            callback(null);\n                        }\n                        return;\n                    }\n                    running += 1;\n                    iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n                }\n            }\n\n            replenish();\n        };\n    }\n\n    /**\n     * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name eachOfLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.eachOf]{@link module:Collections.eachOf}\n     * @alias forEachOfLimit\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - A function to apply to each\n     * item in `coll`. The `key` is the item's key, or index in the case of an\n     * array. The iteratee is passed a `callback(err)` which must be called once it\n     * has completed. If no error has occurred, the callback should be run without\n     * arguments or with an explicit `null` argument. Invoked with\n     * (item, key, callback).\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     */\n    function eachOfLimit(coll, limit, iteratee, callback) {\n      _eachOfLimit(limit)(coll, iteratee, callback);\n    }\n\n    function doLimit(fn, limit) {\n        return function (iterable, iteratee, callback) {\n            return fn(iterable, limit, iteratee, callback);\n        };\n    }\n\n    /** Used as the `TypeError` message for \"Functions\" methods. */\n    var FUNC_ERROR_TEXT$1 = 'Expected a function';\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT$1);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once$1(func) {\n      return before(2, func);\n    }\n\n    // eachOf implementation optimized for array-likes\n    function eachOfArrayLike(coll, iteratee, callback) {\n        callback = once$1(callback || noop);\n        var index = 0,\n            completed = 0,\n            length = coll.length;\n        if (length === 0) {\n            callback(null);\n        }\n\n        function iteratorCallback(err) {\n            if (err) {\n                callback(err);\n            } else if (++completed === length) {\n                callback(null);\n            }\n        }\n\n        for (; index < length; index++) {\n            iteratee(coll[index], index, onlyOnce(iteratorCallback));\n        }\n    }\n\n    // a generic version of eachOf which can handle array, object, and iterator cases.\n    var eachOfGeneric = doLimit(eachOfLimit, Infinity);\n\n    /**\n     * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n     * to the iteratee.\n     *\n     * @name eachOf\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias forEachOf\n     * @category Collection\n     * @see [async.each]{@link module:Collections.each}\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A function to apply to each\n     * item in `coll`. The `key` is the item's key, or index in the case of an\n     * array. The iteratee is passed a `callback(err)` which must be called once it\n     * has completed. If no error has occurred, the callback should be run without\n     * arguments or with an explicit `null` argument. Invoked with\n     * (item, key, callback).\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     * @example\n     *\n     * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n     * var configs = {};\n     *\n     * async.forEachOf(obj, function (value, key, callback) {\n     *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n     *         if (err) return callback(err);\n     *         try {\n     *             configs[key] = JSON.parse(data);\n     *         } catch (e) {\n     *             return callback(e);\n     *         }\n     *         callback();\n     *     });\n     * }, function (err) {\n     *     if (err) console.error(err.message);\n     *     // configs is now a map of JSON data\n     *     doSomethingWith(configs);\n     * });\n     */\n    function eachOf (coll, iteratee, callback) {\n        var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n        eachOfImplementation(coll, iteratee, callback);\n    }\n\n    function doParallel(fn) {\n        return function (obj, iteratee, callback) {\n            return fn(eachOf, obj, iteratee, callback);\n        };\n    }\n\n    function _asyncMap(eachfn, arr, iteratee, callback) {\n        callback = once(callback || noop);\n        arr = arr || [];\n        var results = [];\n        var counter = 0;\n\n        eachfn(arr, function (value, _, callback) {\n            var index = counter++;\n            iteratee(value, function (err, v) {\n                results[index] = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, results);\n        });\n    }\n\n    /**\n     * Produces a new collection of values by mapping each value in `coll` through\n     * the `iteratee` function. The `iteratee` is called with an item from `coll`\n     * and a callback for when it has finished processing. Each of these callback\n     * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n     * `iteratee` passes an error to its callback, the main `callback` (for the\n     * `map` function) is immediately called with the error.\n     *\n     * Note, that since this function applies the `iteratee` to each item in\n     * parallel, there is no guarantee that the `iteratee` functions will complete\n     * in order. However, the results array will be in the same order as the\n     * original `coll`.\n     *\n     * If `map` is passed an Object, the results will be an Array.  The results\n     * will roughly be in the order of the original Objects' keys (but this can\n     * vary across JavaScript engines)\n     *\n     * @name map\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A function to apply to each item in `coll`.\n     * The iteratee is passed a `callback(err, transformed)` which must be called\n     * once it has completed with an error (which can be `null`) and a\n     * transformed item. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Results is an Array of the\n     * transformed items from the `coll`. Invoked with (err, results).\n     * @example\n     *\n     * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n     *     // results is now an array of stats for each file\n     * });\n     */\n    var map = doParallel(_asyncMap);\n\n    /**\n     * Applies the provided arguments to each function in the array, calling\n     * `callback` after all functions have completed. If you only provide the first\n     * argument, then it will return a function which lets you pass in the\n     * arguments as if it were a single function call.\n     *\n     * @name applyEach\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array|Iterable|Object} fns - A collection of asynchronous functions to all\n     * call with the same arguments\n     * @param {...*} [args] - any number of separate arguments to pass to the\n     * function.\n     * @param {Function} [callback] - the final argument should be the callback,\n     * called when all functions have completed processing.\n     * @returns {Function} - If only the first argument is provided, it will return\n     * a function which lets you pass in the arguments as if it were a single\n     * function call.\n     * @example\n     *\n     * async.applyEach([enableSearch, updateSchema], 'bucket', callback);\n     *\n     * // partial application example:\n     * async.each(\n     *     buckets,\n     *     async.applyEach([enableSearch, updateSchema]),\n     *     callback\n     * );\n     */\n    var applyEach = applyEach$1(map);\n\n    function doParallelLimit(fn) {\n        return function (obj, limit, iteratee, callback) {\n            return fn(_eachOfLimit(limit), obj, iteratee, callback);\n        };\n    }\n\n    /**\n     * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name mapLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.map]{@link module:Collections.map}\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - A function to apply to each item in `coll`.\n     * The iteratee is passed a `callback(err, transformed)` which must be called\n     * once it has completed with an error (which can be `null`) and a transformed\n     * item. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Results is an array of the\n     * transformed items from the `coll`. Invoked with (err, results).\n     */\n    var mapLimit = doParallelLimit(_asyncMap);\n\n    /**\n     * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n     *\n     * @name mapSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.map]{@link module:Collections.map}\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A function to apply to each item in `coll`.\n     * The iteratee is passed a `callback(err, transformed)` which must be called\n     * once it has completed with an error (which can be `null`) and a\n     * transformed item. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Results is an array of the\n     * transformed items from the `coll`. Invoked with (err, results).\n     */\n    var mapSeries = doLimit(mapLimit, 1);\n\n    /**\n     * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n     *\n     * @name applyEachSeries\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n     * @category Control Flow\n     * @param {Array|Iterable|Object} fns - A collection of asynchronous functions to all\n     * call with the same arguments\n     * @param {...*} [args] - any number of separate arguments to pass to the\n     * function.\n     * @param {Function} [callback] - the final argument should be the callback,\n     * called when all functions have completed processing.\n     * @returns {Function} - If only the first argument is provided, it will return\n     * a function which lets you pass in the arguments as if it were a single\n     * function call.\n     */\n    var applyEachSeries = applyEach$1(mapSeries);\n\n    /**\n     * Creates a continuation function with some arguments already applied.\n     *\n     * Useful as a shorthand when combined with other control flow functions. Any\n     * arguments passed to the returned function are added to the arguments\n     * originally passed to apply.\n     *\n     * @name apply\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {Function} function - The function you want to eventually apply all\n     * arguments to. Invokes with (arguments...).\n     * @param {...*} arguments... - Any number of arguments to automatically apply\n     * when the continuation is called.\n     * @example\n     *\n     * // using apply\n     * async.parallel([\n     *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n     *     async.apply(fs.writeFile, 'testfile2', 'test2')\n     * ]);\n     *\n     *\n     * // the same process without using apply\n     * async.parallel([\n     *     function(callback) {\n     *         fs.writeFile('testfile1', 'test1', callback);\n     *     },\n     *     function(callback) {\n     *         fs.writeFile('testfile2', 'test2', callback);\n     *     }\n     * ]);\n     *\n     * // It's possible to pass any number of additional arguments when calling the\n     * // continuation:\n     *\n     * node> var fn = async.apply(sys.puts, 'one');\n     * node> fn('two', 'three');\n     * one\n     * two\n     * three\n     */\n    var apply$1 = rest(function (fn, args) {\n        return rest(function (callArgs) {\n            return fn.apply(null, args.concat(callArgs));\n        });\n    });\n\n    /**\n     * Take a sync function and make it async, passing its return value to a\n     * callback. This is useful for plugging sync functions into a waterfall,\n     * series, or other async functions. Any arguments passed to the generated\n     * function will be passed to the wrapped function (except for the final\n     * callback argument). Errors thrown will be passed to the callback.\n     *\n     * If the function passed to `asyncify` returns a Promise, that promises's\n     * resolved/rejected state will be used to call the callback, rather than simply\n     * the synchronous return value.\n     *\n     * This also means you can asyncify ES2016 `async` functions.\n     *\n     * @name asyncify\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @alias wrapSync\n     * @category Util\n     * @param {Function} func - The synchronous function to convert to an\n     * asynchronous function.\n     * @returns {Function} An asynchronous wrapper of the `func`. To be invoked with\n     * (callback).\n     * @example\n     *\n     * // passing a regular synchronous function\n     * async.waterfall([\n     *     async.apply(fs.readFile, filename, \"utf8\"),\n     *     async.asyncify(JSON.parse),\n     *     function (data, next) {\n     *         // data is the result of parsing the text.\n     *         // If there was a parsing error, it would have been caught.\n     *     }\n     * ], callback);\n     *\n     * // passing a function returning a promise\n     * async.waterfall([\n     *     async.apply(fs.readFile, filename, \"utf8\"),\n     *     async.asyncify(function (contents) {\n     *         return db.model.create(contents);\n     *     }),\n     *     function (model, next) {\n     *         // `model` is the instantiated model object.\n     *         // If there was an error, this function would be skipped.\n     *     }\n     * ], callback);\n     *\n     * // es6 example\n     * var q = async.queue(async.asyncify(async function(file) {\n     *     var intermediateStep = await processFile(file);\n     *     return await somePromise(intermediateStep)\n     * }));\n     *\n     * q.push(files);\n     */\n    function asyncify(func) {\n        return initialParams(function (args, callback) {\n            var result;\n            try {\n                result = func.apply(this, args);\n            } catch (e) {\n                return callback(e);\n            }\n            // if result is Promise object\n            if (isObject(result) && typeof result.then === 'function') {\n                result.then(function (value) {\n                    callback(null, value);\n                }, function (err) {\n                    callback(err.message ? err : new Error(err));\n                });\n            } else {\n                callback(null, result);\n            }\n        });\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for\n     * iteratee shorthands.\n     *\n     * @private\n     * @param {Array} [array] The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array ? array.length : 0;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `NaN` is found in `array`.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {number} fromIndex The index to search from.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n     */\n    function indexOfNaN(array, fromIndex, fromRight) {\n      var length = array.length,\n          index = fromIndex + (fromRight ? 1 : -1);\n\n      while ((fromRight ? index-- : ++index < length)) {\n        var other = array[index];\n        if (other !== other) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} fromIndex The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function baseIndexOf(array, value, fromIndex) {\n      if (value !== value) {\n        return indexOfNaN(array, fromIndex);\n      }\n      var index = fromIndex - 1,\n          length = array.length;\n\n      while (++index < length) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Determines the best order for running the functions in `tasks`, based on\n     * their requirements. Each function can optionally depend on other functions\n     * being completed first, and each function is run as soon as its requirements\n     * are satisfied.\n     *\n     * If any of the functions pass an error to their callback, the `auto` sequence\n     * will stop. Further tasks will not execute (so any other functions depending\n     * on it will not run), and the main `callback` is immediately called with the\n     * error.\n     *\n     * Functions also receive an object containing the results of functions which\n     * have completed so far as the first argument, if they have dependencies. If a\n     * task function has no dependencies, it will only be passed a callback.\n     *\n     * @name auto\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Object} tasks - An object. Each of its properties is either a\n     * function or an array of requirements, with the function itself the last item\n     * in the array. The object's key of a property serves as the name of the task\n     * defined by that property, i.e. can be used when specifying requirements for\n     * other tasks. The function receives one or two arguments:\n     * * a `results` object, containing the results of the previously executed\n     *   functions, only passed if the task has any dependencies,\n     * * a `callback(err, result)` function, which must be called when finished,\n     *   passing an `error` (which can be `null`) and the result of the function's\n     *   execution.\n     * @param {number} [concurrency=Infinity] - An optional `integer` for\n     * determining the maximum number of tasks that can be run in parallel. By\n     * default, as many as possible.\n     * @param {Function} [callback] - An optional callback which is called when all\n     * the tasks have been completed. It receives the `err` argument if any `tasks`\n     * pass an error to their callback. Results are always returned; however, if an\n     * error occurs, no further `tasks` will be performed, and the results object\n     * will only contain partial results. Invoked with (err, results).\n     * @returns undefined\n     * @example\n     *\n     * async.auto({\n     *     // this function will just be passed a callback\n     *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),\n     *     showData: ['readData', function(results, cb) {\n     *         // results.readData is the file's contents\n     *         // ...\n     *     }]\n     * }, callback);\n     *\n     * async.auto({\n     *     get_data: function(callback) {\n     *         console.log('in get_data');\n     *         // async code to get some data\n     *         callback(null, 'data', 'converted to array');\n     *     },\n     *     make_folder: function(callback) {\n     *         console.log('in make_folder');\n     *         // async code to create a directory to store a file in\n     *         // this is run at the same time as getting the data\n     *         callback(null, 'folder');\n     *     },\n     *     write_file: ['get_data', 'make_folder', function(results, callback) {\n     *         console.log('in write_file', JSON.stringify(results));\n     *         // once there is some data and the directory exists,\n     *         // write the data to a file in the directory\n     *         callback(null, 'filename');\n     *     }],\n     *     email_link: ['write_file', function(results, callback) {\n     *         console.log('in email_link', JSON.stringify(results));\n     *         // once the file is written let's email a link to it...\n     *         // results.write_file contains the filename returned by write_file.\n     *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n     *     }]\n     * }, function(err, results) {\n     *     console.log('err = ', err);\n     *     console.log('results = ', results);\n     * });\n     */\n    function auto (tasks, concurrency, callback) {\n        if (typeof concurrency === 'function') {\n            // concurrency is optional, shift the args.\n            callback = concurrency;\n            concurrency = null;\n        }\n        callback = once(callback || noop);\n        var keys$$ = keys(tasks);\n        var numTasks = keys$$.length;\n        if (!numTasks) {\n            return callback(null);\n        }\n        if (!concurrency) {\n            concurrency = numTasks;\n        }\n\n        var results = {};\n        var runningTasks = 0;\n        var hasError = false;\n\n        var listeners = {};\n\n        var readyTasks = [];\n\n        // for cycle detection:\n        var readyToCheck = []; // tasks that have been identified as reachable\n        // without the possibility of returning to an ancestor task\n        var uncheckedDependencies = {};\n\n        baseForOwn(tasks, function (task, key) {\n            if (!isArray(task)) {\n                // no dependencies\n                enqueueTask(key, [task]);\n                readyToCheck.push(key);\n                return;\n            }\n\n            var dependencies = task.slice(0, task.length - 1);\n            var remainingDependencies = dependencies.length;\n            if (remainingDependencies === 0) {\n                enqueueTask(key, task);\n                readyToCheck.push(key);\n                return;\n            }\n            uncheckedDependencies[key] = remainingDependencies;\n\n            arrayEach(dependencies, function (dependencyName) {\n                if (!tasks[dependencyName]) {\n                    throw new Error('async.auto task `' + key + '` has a non-existent dependency in ' + dependencies.join(', '));\n                }\n                addListener(dependencyName, function () {\n                    remainingDependencies--;\n                    if (remainingDependencies === 0) {\n                        enqueueTask(key, task);\n                    }\n                });\n            });\n        });\n\n        checkForDeadlocks();\n        processQueue();\n\n        function enqueueTask(key, task) {\n            readyTasks.push(function () {\n                runTask(key, task);\n            });\n        }\n\n        function processQueue() {\n            if (readyTasks.length === 0 && runningTasks === 0) {\n                return callback(null, results);\n            }\n            while (readyTasks.length && runningTasks < concurrency) {\n                var run = readyTasks.shift();\n                run();\n            }\n        }\n\n        function addListener(taskName, fn) {\n            var taskListeners = listeners[taskName];\n            if (!taskListeners) {\n                taskListeners = listeners[taskName] = [];\n            }\n\n            taskListeners.push(fn);\n        }\n\n        function taskComplete(taskName) {\n            var taskListeners = listeners[taskName] || [];\n            arrayEach(taskListeners, function (fn) {\n                fn();\n            });\n            processQueue();\n        }\n\n        function runTask(key, task) {\n            if (hasError) return;\n\n            var taskCallback = onlyOnce(rest(function (err, args) {\n                runningTasks--;\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    baseForOwn(results, function (val, rkey) {\n                        safeResults[rkey] = val;\n                    });\n                    safeResults[key] = args;\n                    hasError = true;\n                    listeners = [];\n\n                    callback(err, safeResults);\n                } else {\n                    results[key] = args;\n                    taskComplete(key);\n                }\n            }));\n\n            runningTasks++;\n            var taskFn = task[task.length - 1];\n            if (task.length > 1) {\n                taskFn(results, taskCallback);\n            } else {\n                taskFn(taskCallback);\n            }\n        }\n\n        function checkForDeadlocks() {\n            // Kahn's algorithm\n            // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n            // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n            var currentTask;\n            var counter = 0;\n            while (readyToCheck.length) {\n                currentTask = readyToCheck.pop();\n                counter++;\n                arrayEach(getDependents(currentTask), function (dependent) {\n                    if (--uncheckedDependencies[dependent] === 0) {\n                        readyToCheck.push(dependent);\n                    }\n                });\n            }\n\n            if (counter !== numTasks) {\n                throw new Error('async.auto cannot execute tasks due to a recursive dependency');\n            }\n        }\n\n        function getDependents(taskName) {\n            var result = [];\n            baseForOwn(tasks, function (task, key) {\n                if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {\n                    result.push(key);\n                }\n            });\n            return result;\n        }\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} [array] The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Checks if `value` is a global object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n     */\n    function checkGlobal(value) {\n      return (value && value.Object === Object) ? value : null;\n    }\n\n    /** Detect free variable `global` from Node.js. */\n    var freeGlobal = checkGlobal(typeof global == 'object' && global);\n\n    /** Detect free variable `self`. */\n    var freeSelf = checkGlobal(typeof self == 'object' && self);\n\n    /** Detect `this` as the global object. */\n    var thisGlobal = checkGlobal(typeof this == 'object' && this);\n\n    /** Used as a reference to the global object. */\n    var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();\n\n    /** Built-in value references. */\n    var Symbol$1 = root.Symbol;\n\n    /** Used as references for various `Number` constants. */\n    var INFINITY$1 = 1 / 0;\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;\n    var symbolToString = symbolProto ? symbolProto.toString : undefined;\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY$1) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n     * that is not found in the character symbols.\n     *\n     * @private\n     * @param {Array} strSymbols The string symbols to inspect.\n     * @param {Array} chrSymbols The character symbols to find.\n     * @returns {number} Returns the index of the last unmatched string symbol.\n     */\n    function charsEndIndex(strSymbols, chrSymbols) {\n      var index = strSymbols.length;\n\n      while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n      return index;\n    }\n\n    /**\n     * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n     * that is not found in the character symbols.\n     *\n     * @private\n     * @param {Array} strSymbols The string symbols to inspect.\n     * @param {Array} chrSymbols The character symbols to find.\n     * @returns {number} Returns the index of the first unmatched string symbol.\n     */\n    function charsStartIndex(strSymbols, chrSymbols) {\n      var index = -1,\n          length = strSymbols.length;\n\n      while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n      return index;\n    }\n\n    /** Used to compose unicode character classes. */\n    var rsAstralRange = '\\\\ud800-\\\\udfff';\n    var rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\n    var rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\n    var rsVarRange = '\\\\ufe0e\\\\ufe0f';\n    var rsAstral = '[' + rsAstralRange + ']';\n    var rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';\n    var rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\n    var rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\n    var rsNonAstral = '[^' + rsAstralRange + ']';\n    var rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\n    var rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\n    var rsZWJ = '\\\\u200d';\n    var reOptMod = rsModifier + '?';\n    var rsOptVar = '[' + rsVarRange + ']?';\n    var rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\n    var rsSeq = rsOptVar + reOptMod + rsOptJoin;\n    var rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n    /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n    var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n    /**\n     * Converts `string` to an array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the converted array.\n     */\n    function stringToArray(string) {\n      return string.match(reComplexSymbol);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /** Used to match leading and trailing whitespace. */\n    var reTrim$1 = /^\\s+|\\s+$/g;\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim$1, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    var FN_ARGS = /^(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\n    var FN_ARG_SPLIT = /,/;\n    var FN_ARG = /(=.+)?(\\s*)$/;\n    var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\n    function parseParams(func) {\n        func = func.toString().replace(STRIP_COMMENTS, '');\n        func = func.match(FN_ARGS)[2].replace(' ', '');\n        func = func ? func.split(FN_ARG_SPLIT) : [];\n        func = func.map(function (arg) {\n            return trim(arg.replace(FN_ARG, ''));\n        });\n        return func;\n    }\n\n    /**\n     * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n     * tasks are specified as parameters to the function, after the usual callback\n     * parameter, with the parameter names matching the names of the tasks it\n     * depends on. This can provide even more readable task graphs which can be\n     * easier to maintain.\n     *\n     * If a final callback is specified, the task results are similarly injected,\n     * specified as named parameters after the initial error parameter.\n     *\n     * The autoInject function is purely syntactic sugar and its semantics are\n     * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n     *\n     * @name autoInject\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.auto]{@link module:ControlFlow.auto}\n     * @category Control Flow\n     * @param {Object} tasks - An object, each of whose properties is a function of\n     * the form 'func([dependencies...], callback). The object's key of a property\n     * serves as the name of the task defined by that property, i.e. can be used\n     * when specifying requirements for other tasks.\n     * * The `callback` parameter is a `callback(err, result)` which must be called\n     *   when finished, passing an `error` (which can be `null`) and the result of\n     *   the function's execution. The remaining parameters name other tasks on\n     *   which the task is dependent, and the results from those tasks are the\n     *   arguments of those parameters.\n     * @param {Function} [callback] - An optional callback which is called when all\n     * the tasks have been completed. It receives the `err` argument if any `tasks`\n     * pass an error to their callback, and a `results` object with any completed\n     * task results, similar to `auto`.\n     * @example\n     *\n     * //  The example from `auto` can be rewritten as follows:\n     * async.autoInject({\n     *     get_data: function(callback) {\n     *         // async code to get some data\n     *         callback(null, 'data', 'converted to array');\n     *     },\n     *     make_folder: function(callback) {\n     *         // async code to create a directory to store a file in\n     *         // this is run at the same time as getting the data\n     *         callback(null, 'folder');\n     *     },\n     *     write_file: function(get_data, make_folder, callback) {\n     *         // once there is some data and the directory exists,\n     *         // write the data to a file in the directory\n     *         callback(null, 'filename');\n     *     },\n     *     email_link: function(write_file, callback) {\n     *         // once the file is written let's email a link to it...\n     *         // write_file contains the filename returned by write_file.\n     *         callback(null, {'file':write_file, 'email':'user@example.com'});\n     *     }\n     * }, function(err, results) {\n     *     console.log('err = ', err);\n     *     console.log('email_link = ', results.email_link);\n     * });\n     *\n     * // If you are using a JS minifier that mangles parameter names, `autoInject`\n     * // will not work with plain functions, since the parameter names will be\n     * // collapsed to a single letter identifier.  To work around this, you can\n     * // explicitly specify the names of the parameters your task function needs\n     * // in an array, similar to Angular.js dependency injection.\n     *\n     * // This still has an advantage over plain `auto`, since the results a task\n     * // depends on are still spread into arguments.\n     * async.autoInject({\n     *     //...\n     *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n     *         callback(null, 'filename');\n     *     }],\n     *     email_link: ['write_file', function(write_file, callback) {\n     *         callback(null, {'file':write_file, 'email':'user@example.com'});\n     *     }]\n     *     //...\n     * }, function(err, results) {\n     *     console.log('err = ', err);\n     *     console.log('email_link = ', results.email_link);\n     * });\n     */\n    function autoInject(tasks, callback) {\n        var newTasks = {};\n\n        baseForOwn(tasks, function (taskFn, key) {\n            var params;\n\n            if (isArray(taskFn)) {\n                params = copyArray(taskFn);\n                taskFn = params.pop();\n\n                newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n            } else if (taskFn.length === 1) {\n                // no dependencies, use the function as-is\n                newTasks[key] = taskFn;\n            } else {\n                params = parseParams(taskFn);\n                if (taskFn.length === 0 && params.length === 0) {\n                    throw new Error(\"autoInject task functions require explicit parameters.\");\n                }\n\n                params.pop();\n\n                newTasks[key] = params.concat(newTask);\n            }\n\n            function newTask(results, taskCb) {\n                var newArgs = arrayMap(params, function (name) {\n                    return results[name];\n                });\n                newArgs.push(taskCb);\n                taskFn.apply(null, newArgs);\n            }\n        });\n\n        auto(newTasks, callback);\n    }\n\n    var hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\n    var hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\n    function fallback(fn) {\n        setTimeout(fn, 0);\n    }\n\n    function wrap(defer) {\n        return rest(function (fn, args) {\n            defer(function () {\n                fn.apply(null, args);\n            });\n        });\n    }\n\n    var _defer;\n\n    if (hasSetImmediate) {\n        _defer = setImmediate;\n    } else if (hasNextTick) {\n        _defer = process.nextTick;\n    } else {\n        _defer = fallback;\n    }\n\n    var setImmediate$1 = wrap(_defer);\n\n    // Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n    // used for queues. This implementation assumes that the node provided by the user can be modified\n    // to adjust the next and last properties. We implement only the minimal functionality\n    // for queue support.\n    function DLL() {\n        this.head = this.tail = null;\n        this.length = 0;\n    }\n\n    function setInitial(dll, node) {\n        dll.length = 1;\n        dll.head = dll.tail = node;\n    }\n\n    DLL.prototype.removeLink = function (node) {\n        if (node.prev) node.prev.next = node.next;else this.head = node.next;\n        if (node.next) node.next.prev = node.prev;else this.tail = node.prev;\n\n        node.prev = node.next = null;\n        this.length -= 1;\n        return node;\n    };\n\n    DLL.prototype.empty = DLL;\n\n    DLL.prototype.insertAfter = function (node, newNode) {\n        newNode.prev = node;\n        newNode.next = node.next;\n        if (node.next) node.next.prev = newNode;else this.tail = newNode;\n        node.next = newNode;\n        this.length += 1;\n    };\n\n    DLL.prototype.insertBefore = function (node, newNode) {\n        newNode.prev = node.prev;\n        newNode.next = node;\n        if (node.prev) node.prev.next = newNode;else this.head = newNode;\n        node.prev = newNode;\n        this.length += 1;\n    };\n\n    DLL.prototype.unshift = function (node) {\n        if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);\n    };\n\n    DLL.prototype.push = function (node) {\n        if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);\n    };\n\n    DLL.prototype.shift = function () {\n        return this.head && this.removeLink(this.head);\n    };\n\n    DLL.prototype.pop = function () {\n        return this.tail && this.removeLink(this.tail);\n    };\n\n    function queue(worker, concurrency, payload) {\n        if (concurrency == null) {\n            concurrency = 1;\n        } else if (concurrency === 0) {\n            throw new Error('Concurrency must not be zero');\n        }\n\n        function _insert(data, insertAtFront, callback) {\n            if (callback != null && typeof callback !== 'function') {\n                throw new Error('task callback must be a function');\n            }\n            q.started = true;\n            if (!isArray(data)) {\n                data = [data];\n            }\n            if (data.length === 0 && q.idle()) {\n                // call drain immediately if there are no tasks\n                return setImmediate$1(function () {\n                    q.drain();\n                });\n            }\n            arrayEach(data, function (task) {\n                var item = {\n                    data: task,\n                    callback: callback || noop\n                };\n\n                if (insertAtFront) {\n                    q._tasks.unshift(item);\n                } else {\n                    q._tasks.push(item);\n                }\n            });\n            setImmediate$1(q.process);\n        }\n\n        function _next(tasks) {\n            return rest(function (args) {\n                workers -= 1;\n\n                arrayEach(tasks, function (task) {\n                    arrayEach(workersList, function (worker, index) {\n                        if (worker === task) {\n                            workersList.splice(index, 1);\n                            return false;\n                        }\n                    });\n\n                    task.callback.apply(task, args);\n\n                    if (args[0] != null) {\n                        q.error(args[0], task.data);\n                    }\n                });\n\n                if (workers <= q.concurrency - q.buffer) {\n                    q.unsaturated();\n                }\n\n                if (q.idle()) {\n                    q.drain();\n                }\n                q.process();\n            });\n        }\n\n        var workers = 0;\n        var workersList = [];\n        var q = {\n            _tasks: new DLL(),\n            concurrency: concurrency,\n            payload: payload,\n            saturated: noop,\n            unsaturated: noop,\n            buffer: concurrency / 4,\n            empty: noop,\n            drain: noop,\n            error: noop,\n            started: false,\n            paused: false,\n            push: function (data, callback) {\n                _insert(data, false, callback);\n            },\n            kill: function () {\n                q.drain = noop;\n                q._tasks.empty();\n            },\n            unshift: function (data, callback) {\n                _insert(data, true, callback);\n            },\n            process: function () {\n                while (!q.paused && workers < q.concurrency && q._tasks.length) {\n                    var tasks = [],\n                        data = [];\n                    var l = q._tasks.length;\n                    if (q.payload) l = Math.min(l, q.payload);\n                    for (var i = 0; i < l; i++) {\n                        var node = q._tasks.shift();\n                        tasks.push(node);\n                        data.push(node.data);\n                    }\n\n                    if (q._tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    workersList.push(tasks[0]);\n\n                    if (workers === q.concurrency) {\n                        q.saturated();\n                    }\n\n                    var cb = onlyOnce(_next(tasks));\n                    worker(data, cb);\n                }\n            },\n            length: function () {\n                return q._tasks.length;\n            },\n            running: function () {\n                return workers;\n            },\n            workersList: function () {\n                return workersList;\n            },\n            idle: function () {\n                return q._tasks.length + workers === 0;\n            },\n            pause: function () {\n                q.paused = true;\n            },\n            resume: function () {\n                if (q.paused === false) {\n                    return;\n                }\n                q.paused = false;\n                var resumeCount = Math.min(q.concurrency, q._tasks.length);\n                // Need to call q.process once per concurrent\n                // worker to preserve full concurrency after pause\n                for (var w = 1; w <= resumeCount; w++) {\n                    setImmediate$1(q.process);\n                }\n            }\n        };\n        return q;\n    }\n\n    /**\n     * A cargo of tasks for the worker function to complete. Cargo inherits all of\n     * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.\n     * @typedef {Object} CargoObject\n     * @memberOf module:ControlFlow\n     * @property {Function} length - A function returning the number of items\n     * waiting to be processed. Invoke like `cargo.length()`.\n     * @property {number} payload - An `integer` for determining how many tasks\n     * should be process per round. This property can be changed after a `cargo` is\n     * created to alter the payload on-the-fly.\n     * @property {Function} push - Adds `task` to the `queue`. The callback is\n     * called once the `worker` has finished processing the task. Instead of a\n     * single task, an array of `tasks` can be submitted. The respective callback is\n     * used for every task in the list. Invoke like `cargo.push(task, [callback])`.\n     * @property {Function} saturated - A callback that is called when the\n     * `queue.length()` hits the concurrency and further tasks will be queued.\n     * @property {Function} empty - A callback that is called when the last item\n     * from the `queue` is given to a `worker`.\n     * @property {Function} drain - A callback that is called when the last item\n     * from the `queue` has returned from the `worker`.\n     * @property {Function} idle - a function returning false if there are items\n     * waiting or being processed, or true if not. Invoke like `cargo.idle()`.\n     * @property {Function} pause - a function that pauses the processing of tasks\n     * until `resume()` is called. Invoke like `cargo.pause()`.\n     * @property {Function} resume - a function that resumes the processing of\n     * queued tasks when the queue is paused. Invoke like `cargo.resume()`.\n     * @property {Function} kill - a function that removes the `drain` callback and\n     * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.\n     */\n\n    /**\n     * Creates a `cargo` object with the specified payload. Tasks added to the\n     * cargo will be processed altogether (up to the `payload` limit). If the\n     * `worker` is in progress, the task is queued until it becomes available. Once\n     * the `worker` has completed some tasks, each callback of those tasks is\n     * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n     * for how `cargo` and `queue` work.\n     *\n     * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n     * at a time, cargo passes an array of tasks to a single worker, repeating\n     * when the worker is finished.\n     *\n     * @name cargo\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.queue]{@link module:ControlFlow.queue}\n     * @category Control Flow\n     * @param {Function} worker - An asynchronous function for processing an array\n     * of queued tasks, which must call its `callback(err)` argument when finished,\n     * with an optional `err` argument. Invoked with `(tasks, callback)`.\n     * @param {number} [payload=Infinity] - An optional `integer` for determining\n     * how many tasks should be processed per round; if omitted, the default is\n     * unlimited.\n     * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can\n     * attached as certain properties to listen for specific events during the\n     * lifecycle of the cargo and inner queue.\n     * @example\n     *\n     * // create a cargo object with payload 2\n     * var cargo = async.cargo(function(tasks, callback) {\n     *     for (var i=0; i<tasks.length; i++) {\n     *         console.log('hello ' + tasks[i].name);\n     *     }\n     *     callback();\n     * }, 2);\n     *\n     * // add some items\n     * cargo.push({name: 'foo'}, function(err) {\n     *     console.log('finished processing foo');\n     * });\n     * cargo.push({name: 'bar'}, function(err) {\n     *     console.log('finished processing bar');\n     * });\n     * cargo.push({name: 'baz'}, function(err) {\n     *     console.log('finished processing baz');\n     * });\n     */\n    function cargo(worker, payload) {\n      return queue(worker, 1, payload);\n    }\n\n    /**\n     * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n     *\n     * @name eachOfSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.eachOf]{@link module:Collections.eachOf}\n     * @alias forEachOfSeries\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A function to apply to each item in `coll`. The\n     * `key` is the item's key, or index in the case of an array. The iteratee is\n     * passed a `callback(err)` which must be called once it has completed. If no\n     * error has occurred, the callback should be run without arguments or with an\n     * explicit `null` argument. Invoked with (item, key, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Invoked with (err).\n     */\n    var eachOfSeries = doLimit(eachOfLimit, 1);\n\n    /**\n     * Reduces `coll` into a single value using an async `iteratee` to return each\n     * successive step. `memo` is the initial state of the reduction. This function\n     * only operates in series.\n     *\n     * For performance reasons, it may make sense to split a call to this function\n     * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n     * results. This function is for situations where each step in the reduction\n     * needs to be async; if you can get the data before reducing it, then it's\n     * probably a good idea to do so.\n     *\n     * @name reduce\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias inject\n     * @alias foldl\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {*} memo - The initial state of the reduction.\n     * @param {Function} iteratee - A function applied to each item in the\n     * array to produce the next step in the reduction. The `iteratee` is passed a\n     * `callback(err, reduction)` which accepts an optional error as its first\n     * argument, and the state of the reduction as the second. If an error is\n     * passed to the callback, the reduction is stopped and the main `callback` is\n     * immediately called with the error. Invoked with (memo, item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result is the reduced value. Invoked with\n     * (err, result).\n     * @example\n     *\n     * async.reduce([1,2,3], 0, function(memo, item, callback) {\n     *     // pointless async:\n     *     process.nextTick(function() {\n     *         callback(null, memo + item)\n     *     });\n     * }, function(err, result) {\n     *     // result is now equal to the last value of memo, which is 6\n     * });\n     */\n    function reduce(coll, memo, iteratee, callback) {\n        callback = once(callback || noop);\n        eachOfSeries(coll, function (x, i, callback) {\n            iteratee(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    }\n\n    /**\n     * Version of the compose function that is more natural to read. Each function\n     * consumes the return value of the previous function. It is the equivalent of\n     * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n     *\n     * Each function is executed with the `this` binding of the composed function.\n     *\n     * @name seq\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.compose]{@link module:ControlFlow.compose}\n     * @category Control Flow\n     * @param {...Function} functions - the asynchronous functions to compose\n     * @returns {Function} a function that composes the `functions` in order\n     * @example\n     *\n     * // Requires lodash (or underscore), express3 and dresende's orm2.\n     * // Part of an app, that fetches cats of the logged user.\n     * // This example uses `seq` function to avoid overnesting and error\n     * // handling clutter.\n     * app.get('/cats', function(request, response) {\n     *     var User = request.models.User;\n     *     async.seq(\n     *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n     *         function(user, fn) {\n     *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n     *         }\n     *     )(req.session.user_id, function (err, cats) {\n     *         if (err) {\n     *             console.error(err);\n     *             response.json({ status: 'error', message: err.message });\n     *         } else {\n     *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n     *         }\n     *     });\n     * });\n     */\n    var seq = rest(function seq(functions) {\n        return rest(function (args) {\n            var that = this;\n\n            var cb = args[args.length - 1];\n            if (typeof cb == 'function') {\n                args.pop();\n            } else {\n                cb = noop;\n            }\n\n            reduce(functions, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([rest(function (err, nextargs) {\n                    cb(err, nextargs);\n                })]));\n            }, function (err, results) {\n                cb.apply(that, [err].concat(results));\n            });\n        });\n    });\n\n    /**\n     * Creates a function which is a composition of the passed asynchronous\n     * functions. Each function consumes the return value of the function that\n     * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n     * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n     *\n     * Each function is executed with the `this` binding of the composed function.\n     *\n     * @name compose\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {...Function} functions - the asynchronous functions to compose\n     * @returns {Function} an asynchronous function that is the composed\n     * asynchronous `functions`\n     * @example\n     *\n     * function add1(n, callback) {\n     *     setTimeout(function () {\n     *         callback(null, n + 1);\n     *     }, 10);\n     * }\n     *\n     * function mul3(n, callback) {\n     *     setTimeout(function () {\n     *         callback(null, n * 3);\n     *     }, 10);\n     * }\n     *\n     * var add1mul3 = async.compose(mul3, add1);\n     * add1mul3(4, function (err, result) {\n     *     // result now equals 15\n     * });\n     */\n    var compose = rest(function (args) {\n      return seq.apply(null, args.reverse());\n    });\n\n    function concat$1(eachfn, arr, fn, callback) {\n        var result = [];\n        eachfn(arr, function (x, index, cb) {\n            fn(x, function (err, y) {\n                result = result.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, result);\n        });\n    }\n\n    /**\n     * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n     * the concatenated list. The `iteratee`s are called in parallel, and the\n     * results are concatenated as they return. There is no guarantee that the\n     * results array will be returned in the original order of `coll` passed to the\n     * `iteratee` function.\n     *\n     * @name concat\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A function to apply to each item in `coll`.\n     * The iteratee is passed a `callback(err, results)` which must be called once\n     * it has completed with an error (which can be `null`) and an array of results.\n     * Invoked with (item, callback).\n     * @param {Function} [callback(err)] - A callback which is called after all the\n     * `iteratee` functions have finished, or an error occurs. Results is an array\n     * containing the concatenated results of the `iteratee` function. Invoked with\n     * (err, results).\n     * @example\n     *\n     * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n     *     // files is now a list of filenames that exist in the 3 directories\n     * });\n     */\n    var concat = doParallel(concat$1);\n\n    function doSeries(fn) {\n        return function (obj, iteratee, callback) {\n            return fn(eachOfSeries, obj, iteratee, callback);\n        };\n    }\n\n    /**\n     * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n     *\n     * @name concatSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.concat]{@link module:Collections.concat}\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A function to apply to each item in `coll`.\n     * The iteratee is passed a `callback(err, results)` which must be called once\n     * it has completed with an error (which can be `null`) and an array of results.\n     * Invoked with (item, callback).\n     * @param {Function} [callback(err)] - A callback which is called after all the\n     * `iteratee` functions have finished, or an error occurs. Results is an array\n     * containing the concatenated results of the `iteratee` function. Invoked with\n     * (err, results).\n     */\n    var concatSeries = doSeries(concat$1);\n\n    /**\n     * Returns a function that when called, calls-back with the values provided.\n     * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n     * [`auto`]{@link module:ControlFlow.auto}.\n     *\n     * @name constant\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {...*} arguments... - Any number of arguments to automatically invoke\n     * callback with.\n     * @returns {Function} Returns a function that when invoked, automatically\n     * invokes the callback with the previous given arguments.\n     * @example\n     *\n     * async.waterfall([\n     *     async.constant(42),\n     *     function (value, next) {\n     *         // value === 42\n     *     },\n     *     //...\n     * ], callback);\n     *\n     * async.waterfall([\n     *     async.constant(filename, \"utf8\"),\n     *     fs.readFile,\n     *     function (fileData, next) {\n     *         //...\n     *     }\n     *     //...\n     * ], callback);\n     *\n     * async.auto({\n     *     hostname: async.constant(\"https://server.net/\"),\n     *     port: findFreePort,\n     *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n     *         startServer(options, cb);\n     *     }],\n     *     //...\n     * }, callback);\n     */\n    var constant = rest(function (values) {\n        var args = [null].concat(values);\n        return initialParams(function (ignoredArgs, callback) {\n            return callback.apply(this, args);\n        });\n    });\n\n    /**\n     * This method returns the first argument given to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    function _createTester(eachfn, check, getResult) {\n        return function (arr, limit, iteratee, cb) {\n            function done(err) {\n                if (cb) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, getResult(false));\n                    }\n                }\n            }\n            function wrappedIteratee(x, _, callback) {\n                if (!cb) return callback();\n                iteratee(x, function (err, v) {\n                    if (cb) {\n                        if (err) {\n                            cb(err);\n                            cb = iteratee = false;\n                        } else if (check(v)) {\n                            cb(null, getResult(true, x));\n                            cb = iteratee = false;\n                        }\n                    }\n                    callback();\n                });\n            }\n            if (arguments.length > 3) {\n                cb = cb || noop;\n                eachfn(arr, limit, wrappedIteratee, done);\n            } else {\n                cb = iteratee;\n                cb = cb || noop;\n                iteratee = limit;\n                eachfn(arr, wrappedIteratee, done);\n            }\n        };\n    }\n\n    function _findGetResult(v, x) {\n        return x;\n    }\n\n    /**\n     * Returns the first value in `coll` that passes an async truth test. The\n     * `iteratee` is applied in parallel, meaning the first iteratee to return\n     * `true` will fire the detect `callback` with that result. That means the\n     * result might not be the first item in the original `coll` (in terms of order)\n     * that passes the test.\n\n     * If order within the original `coll` is important, then look at\n     * [`detectSeries`]{@link module:Collections.detectSeries}.\n     *\n     * @name detect\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias find\n     * @category Collections\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The iteratee is passed a `callback(err, truthValue)` which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the `iteratee` functions have finished.\n     * Result will be the first item in the array that passes the truth test\n     * (iteratee) or the value `undefined` if none passed. Invoked with\n     * (err, result).\n     * @example\n     *\n     * async.detect(['file1','file2','file3'], function(filePath, callback) {\n     *     fs.access(filePath, function(err) {\n     *         callback(null, !err)\n     *     });\n     * }, function(err, result) {\n     *     // result now equals the first file in the list that exists\n     * });\n     */\n    var detect = _createTester(eachOf, identity, _findGetResult);\n\n    /**\n     * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name detectLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.detect]{@link module:Collections.detect}\n     * @alias findLimit\n     * @category Collections\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The iteratee is passed a `callback(err, truthValue)` which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the `iteratee` functions have finished.\n     * Result will be the first item in the array that passes the truth test\n     * (iteratee) or the value `undefined` if none passed. Invoked with\n     * (err, result).\n     */\n    var detectLimit = _createTester(eachOfLimit, identity, _findGetResult);\n\n    /**\n     * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n     *\n     * @name detectSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.detect]{@link module:Collections.detect}\n     * @alias findSeries\n     * @category Collections\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The iteratee is passed a `callback(err, truthValue)` which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the `iteratee` functions have finished.\n     * Result will be the first item in the array that passes the truth test\n     * (iteratee) or the value `undefined` if none passed. Invoked with\n     * (err, result).\n     */\n    var detectSeries = _createTester(eachOfSeries, identity, _findGetResult);\n\n    function consoleFunc(name) {\n        return rest(function (fn, args) {\n            fn.apply(null, args.concat([rest(function (err, args) {\n                if (typeof console === 'object') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    } else if (console[name]) {\n                        arrayEach(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            })]));\n        });\n    }\n\n    /**\n     * Logs the result of an `async` function to the `console` using `console.dir`\n     * to display the properties of the resulting object. Only works in Node.js or\n     * in browsers that support `console.dir` and `console.error` (such as FF and\n     * Chrome). If multiple arguments are returned from the async function,\n     * `console.dir` is called on each argument in order.\n     *\n     * @name dir\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {Function} function - The function you want to eventually apply all\n     * arguments to.\n     * @param {...*} arguments... - Any number of arguments to apply to the function.\n     * @example\n     *\n     * // in a module\n     * var hello = function(name, callback) {\n     *     setTimeout(function() {\n     *         callback(null, {hello: name});\n     *     }, 1000);\n     * };\n     *\n     * // in the node repl\n     * node> async.dir(hello, 'world');\n     * {hello: 'world'}\n     */\n    var dir = consoleFunc('dir');\n\n    /**\n     * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in\n     * the order of operations, the arguments `test` and `fn` are switched.\n     *\n     * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.\n     * @name doDuring\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.during]{@link module:ControlFlow.during}\n     * @category Control Flow\n     * @param {Function} fn - A function which is called each time `test` passes.\n     * The function is passed a `callback(err)`, which must be called once it has\n     * completed with an optional `err` argument. Invoked with (callback).\n     * @param {Function} test - asynchronous truth test to perform before each\n     * execution of `fn`. Invoked with (...args, callback), where `...args` are the\n     * non-error args from the previous callback of `fn`.\n     * @param {Function} [callback] - A callback which is called after the test\n     * function has failed and repeated execution of `fn` has stopped. `callback`\n     * will be passed an error if one occured, otherwise `null`.\n     */\n    function doDuring(fn, test, callback) {\n        callback = onlyOnce(callback || noop);\n\n        var next = rest(function (err, args) {\n            if (err) return callback(err);\n            args.push(check);\n            test.apply(this, args);\n        });\n\n        function check(err, truth) {\n            if (err) return callback(err);\n            if (!truth) return callback(null);\n            fn(next);\n        }\n\n        check(null, true);\n    }\n\n    /**\n     * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n     * the order of operations, the arguments `test` and `iteratee` are switched.\n     *\n     * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n     *\n     * @name doWhilst\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.whilst]{@link module:ControlFlow.whilst}\n     * @category Control Flow\n     * @param {Function} iteratee - A function which is called each time `test`\n     * passes. The function is passed a `callback(err)`, which must be called once\n     * it has completed with an optional `err` argument. Invoked with (callback).\n     * @param {Function} test - synchronous truth test to perform after each\n     * execution of `iteratee`. Invoked with Invoked with the non-error callback\n     * results of `iteratee`.\n     * @param {Function} [callback] - A callback which is called after the test\n     * function has failed and repeated execution of `iteratee` has stopped.\n     * `callback` will be passed an error and any arguments passed to the final\n     * `iteratee`'s callback. Invoked with (err, [results]);\n     */\n    function doWhilst(iteratee, test, callback) {\n        callback = onlyOnce(callback || noop);\n        var next = rest(function (err, args) {\n            if (err) return callback(err);\n            if (test.apply(this, args)) return iteratee(next);\n            callback.apply(null, [null].concat(args));\n        });\n        iteratee(next);\n    }\n\n    /**\n     * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n     * argument ordering differs from `until`.\n     *\n     * @name doUntil\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n     * @category Control Flow\n     * @param {Function} fn - A function which is called each time `test` fails.\n     * The function is passed a `callback(err)`, which must be called once it has\n     * completed with an optional `err` argument. Invoked with (callback).\n     * @param {Function} test - synchronous truth test to perform after each\n     * execution of `fn`. Invoked with the non-error callback results of `fn`.\n     * @param {Function} [callback] - A callback which is called after the test\n     * function has passed and repeated execution of `fn` has stopped. `callback`\n     * will be passed an error and any arguments passed to the final `fn`'s\n     * callback. Invoked with (err, [results]);\n     */\n    function doUntil(fn, test, callback) {\n        doWhilst(fn, function () {\n            return !test.apply(this, arguments);\n        }, callback);\n    }\n\n    /**\n     * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that\n     * is passed a callback in the form of `function (err, truth)`. If error is\n     * passed to `test` or `fn`, the main callback is immediately called with the\n     * value of the error.\n     *\n     * @name during\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.whilst]{@link module:ControlFlow.whilst}\n     * @category Control Flow\n     * @param {Function} test - asynchronous truth test to perform before each\n     * execution of `fn`. Invoked with (callback).\n     * @param {Function} fn - A function which is called each time `test` passes.\n     * The function is passed a `callback(err)`, which must be called once it has\n     * completed with an optional `err` argument. Invoked with (callback).\n     * @param {Function} [callback] - A callback which is called after the test\n     * function has failed and repeated execution of `fn` has stopped. `callback`\n     * will be passed an error, if one occured, otherwise `null`.\n     * @example\n     *\n     * var count = 0;\n     *\n     * async.during(\n     *     function (callback) {\n     *         return callback(null, count < 5);\n     *     },\n     *     function (callback) {\n     *         count++;\n     *         setTimeout(callback, 1000);\n     *     },\n     *     function (err) {\n     *         // 5 seconds have passed\n     *     }\n     * );\n     */\n    function during(test, fn, callback) {\n        callback = onlyOnce(callback || noop);\n\n        function next(err) {\n            if (err) return callback(err);\n            test(check);\n        }\n\n        function check(err, truth) {\n            if (err) return callback(err);\n            if (!truth) return callback(null);\n            fn(next);\n        }\n\n        test(check);\n    }\n\n    function _withoutIndex(iteratee) {\n        return function (value, index, callback) {\n            return iteratee(value, callback);\n        };\n    }\n\n    /**\n     * Applies the function `iteratee` to each item in `coll`, in parallel.\n     * The `iteratee` is called with an item from the list, and a callback for when\n     * it has finished. If the `iteratee` passes an error to its `callback`, the\n     * main `callback` (for the `each` function) is immediately called with the\n     * error.\n     *\n     * Note, that since this function applies `iteratee` to each item in parallel,\n     * there is no guarantee that the iteratee functions will complete in order.\n     *\n     * @name each\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias forEach\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A function to apply to each item\n     * in `coll`. The iteratee is passed a `callback(err)` which must be called once\n     * it has completed. If no error has occurred, the `callback` should be run\n     * without arguments or with an explicit `null` argument. The array index is not\n     * passed to the iteratee. Invoked with (item, callback). If you need the index,\n     * use `eachOf`.\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     * @example\n     *\n     * // assuming openFiles is an array of file names and saveFile is a function\n     * // to save the modified contents of that file:\n     *\n     * async.each(openFiles, saveFile, function(err){\n     *   // if any of the saves produced an error, err would equal that error\n     * });\n     *\n     * // assuming openFiles is an array of file names\n     * async.each(openFiles, function(file, callback) {\n     *\n     *     // Perform operation on file here.\n     *     console.log('Processing file ' + file);\n     *\n     *     if( file.length > 32 ) {\n     *       console.log('This file name is too long');\n     *       callback('File name too long');\n     *     } else {\n     *       // Do work to process file here\n     *       console.log('File processed');\n     *       callback();\n     *     }\n     * }, function(err) {\n     *     // if any of the file processing produced an error, err would equal that error\n     *     if( err ) {\n     *       // One of the iterations produced an error.\n     *       // All processing will now stop.\n     *       console.log('A file failed to process');\n     *     } else {\n     *       console.log('All files have been processed successfully');\n     *     }\n     * });\n     */\n    function eachLimit(coll, iteratee, callback) {\n      eachOf(coll, _withoutIndex(iteratee), callback);\n    }\n\n    /**\n     * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name eachLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.each]{@link module:Collections.each}\n     * @alias forEachLimit\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A colleciton to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - A function to apply to each item in `coll`. The\n     * iteratee is passed a `callback(err)` which must be called once it has\n     * completed. If no error has occurred, the `callback` should be run without\n     * arguments or with an explicit `null` argument. The array index is not passed\n     * to the iteratee. Invoked with (item, callback). If you need the index, use\n     * `eachOfLimit`.\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     */\n    function eachLimit$1(coll, limit, iteratee, callback) {\n      _eachOfLimit(limit)(coll, _withoutIndex(iteratee), callback);\n    }\n\n    /**\n     * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n     *\n     * @name eachSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.each]{@link module:Collections.each}\n     * @alias forEachSeries\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A function to apply to each\n     * item in `coll`. The iteratee is passed a `callback(err)` which must be called\n     * once it has completed. If no error has occurred, the `callback` should be run\n     * without arguments or with an explicit `null` argument. The array index is\n     * not passed to the iteratee. Invoked with (item, callback). If you need the\n     * index, use `eachOfSeries`.\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     */\n    var eachSeries = doLimit(eachLimit$1, 1);\n\n    /**\n     * Wrap an async function and ensure it calls its callback on a later tick of\n     * the event loop.  If the function already calls its callback on a next tick,\n     * no extra deferral is added. This is useful for preventing stack overflows\n     * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n     * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n     * contained.\n     *\n     * @name ensureAsync\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {Function} fn - an async function, one that expects a node-style\n     * callback as its last argument.\n     * @returns {Function} Returns a wrapped function with the exact same call\n     * signature as the function passed in.\n     * @example\n     *\n     * function sometimesAsync(arg, callback) {\n     *     if (cache[arg]) {\n     *         return callback(null, cache[arg]); // this would be synchronous!!\n     *     } else {\n     *         doSomeIO(arg, callback); // this IO would be asynchronous\n     *     }\n     * }\n     *\n     * // this has a risk of stack overflows if many results are cached in a row\n     * async.mapSeries(args, sometimesAsync, done);\n     *\n     * // this will defer sometimesAsync's callback if necessary,\n     * // preventing stack overflows\n     * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n     */\n    function ensureAsync(fn) {\n        return initialParams(function (args, callback) {\n            var sync = true;\n            args.push(function () {\n                var innerArgs = arguments;\n                if (sync) {\n                    setImmediate$1(function () {\n                        callback.apply(null, innerArgs);\n                    });\n                } else {\n                    callback.apply(null, innerArgs);\n                }\n            });\n            fn.apply(this, args);\n            sync = false;\n        });\n    }\n\n    function notId(v) {\n        return !v;\n    }\n\n    /**\n     * Returns `true` if every element in `coll` satisfies an async test. If any\n     * iteratee call returns `false`, the main `callback` is immediately called.\n     *\n     * @name every\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias all\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in the\n     * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n     * which must be called with a  boolean argument once it has completed. Invoked\n     * with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result will be either `true` or `false`\n     * depending on the values of the async tests. Invoked with (err, result).\n     * @example\n     *\n     * async.every(['file1','file2','file3'], function(filePath, callback) {\n     *     fs.access(filePath, function(err) {\n     *         callback(null, !err)\n     *     });\n     * }, function(err, result) {\n     *     // if result is true then every file exists\n     * });\n     */\n    var every = _createTester(eachOf, notId, notId);\n\n    /**\n     * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name everyLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.every]{@link module:Collections.every}\n     * @alias allLimit\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - A truth test to apply to each item in the\n     * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n     * which must be called with a  boolean argument once it has completed. Invoked\n     * with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result will be either `true` or `false`\n     * depending on the values of the async tests. Invoked with (err, result).\n     */\n    var everyLimit = _createTester(eachOfLimit, notId, notId);\n\n    /**\n     * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n     *\n     * @name everySeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.every]{@link module:Collections.every}\n     * @alias allSeries\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in the\n     * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n     * which must be called with a  boolean argument once it has completed. Invoked\n     * with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result will be either `true` or `false`\n     * depending on the values of the async tests. Invoked with (err, result).\n     */\n    var everySeries = doLimit(everyLimit, 1);\n\n    function _filter(eachfn, arr, iteratee, callback) {\n        callback = once(callback || noop);\n        var results = [];\n        eachfn(arr, function (x, index, callback) {\n            iteratee(x, function (err, v) {\n                if (err) {\n                    callback(err);\n                } else {\n                    if (v) {\n                        results.push({ index: index, value: x });\n                    }\n                    callback();\n                }\n            });\n        }, function (err) {\n            if (err) {\n                callback(err);\n            } else {\n                callback(null, arrayMap(results.sort(function (a, b) {\n                    return a.index - b.index;\n                }), baseProperty('value')));\n            }\n        });\n    }\n\n    /**\n     * Returns a new array of all the values in `coll` which pass an async truth\n     * test. This operation is performed in parallel, but the results array will be\n     * in the same order as the original.\n     *\n     * @name filter\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias select\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     * @example\n     *\n     * async.filter(['file1','file2','file3'], function(filePath, callback) {\n     *     fs.access(filePath, function(err) {\n     *         callback(null, !err)\n     *     });\n     * }, function(err, results) {\n     *     // results now equals an array of the existing files\n     * });\n     */\n    var filter = doParallel(_filter);\n\n    /**\n     * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name filterLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.filter]{@link module:Collections.filter}\n     * @alias selectLimit\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     */\n    var filterLimit = doParallelLimit(_filter);\n\n    /**\n     * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n     *\n     * @name filterSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.filter]{@link module:Collections.filter}\n     * @alias selectSeries\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results)\n     */\n    var filterSeries = doLimit(filterLimit, 1);\n\n    /**\n     * Calls the asynchronous function `fn` with a callback parameter that allows it\n     * to call itself again, in series, indefinitely.\n\n     * If an error is passed to the\n     * callback then `errback` is called with the error, and execution stops,\n     * otherwise it will never be called.\n     *\n     * @name forever\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Function} fn - a function to call repeatedly. Invoked with (next).\n     * @param {Function} [errback] - when `fn` passes an error to it's callback,\n     * this function will be called, and execution stops. Invoked with (err).\n     * @example\n     *\n     * async.forever(\n     *     function(next) {\n     *         // next is suitable for passing to things that need a callback(err [, whatever]);\n     *         // it will result in this function being called again.\n     *     },\n     *     function(err) {\n     *         // if next is called with a value in its first parameter, it will appear\n     *         // in here as 'err', and execution will stop.\n     *     }\n     * );\n     */\n    function forever(fn, errback) {\n        var done = onlyOnce(errback || noop);\n        var task = ensureAsync(fn);\n\n        function next(err) {\n            if (err) return done(err);\n            task(next);\n        }\n        next();\n    }\n\n    /**\n     * Logs the result of an `async` function to the `console`. Only works in\n     * Node.js or in browsers that support `console.log` and `console.error` (such\n     * as FF and Chrome). If multiple arguments are returned from the async\n     * function, `console.log` is called on each argument in order.\n     *\n     * @name log\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {Function} function - The function you want to eventually apply all\n     * arguments to.\n     * @param {...*} arguments... - Any number of arguments to apply to the function.\n     * @example\n     *\n     * // in a module\n     * var hello = function(name, callback) {\n     *     setTimeout(function() {\n     *         callback(null, 'hello ' + name);\n     *     }, 1000);\n     * };\n     *\n     * // in the node repl\n     * node> async.log(hello, 'world');\n     * 'hello world'\n     */\n    var log = consoleFunc('log');\n\n    /**\n     * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name mapValuesLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.mapValues]{@link module:Collections.mapValues}\n     * @category Collection\n     * @param {Object} obj - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - A function to apply to each value in `obj`.\n     * The iteratee is passed a `callback(err, transformed)` which must be called\n     * once it has completed with an error (which can be `null`) and a\n     * transformed value. Invoked with (value, key, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Result is an object of the\n     * transformed values from the `obj`. Invoked with (err, result).\n     */\n    function mapValuesLimit(obj, limit, iteratee, callback) {\n        callback = once(callback || noop);\n        var newObj = {};\n        eachOfLimit(obj, limit, function (val, key, next) {\n            iteratee(val, key, function (err, result) {\n                if (err) return next(err);\n                newObj[key] = result;\n                next();\n            });\n        }, function (err) {\n            callback(err, newObj);\n        });\n    }\n\n    /**\n     * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n     *\n     * Produces a new Object by mapping each value of `obj` through the `iteratee`\n     * function. The `iteratee` is called each `value` and `key` from `obj` and a\n     * callback for when it has finished processing. Each of these callbacks takes\n     * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n     * passes an error to its callback, the main `callback` (for the `mapValues`\n     * function) is immediately called with the error.\n     *\n     * Note, the order of the keys in the result is not guaranteed.  The keys will\n     * be roughly in the order they complete, (but this is very engine-specific)\n     *\n     * @name mapValues\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Object} obj - A collection to iterate over.\n     * @param {Function} iteratee - A function to apply to each value and key in\n     * `coll`. The iteratee is passed a `callback(err, transformed)` which must be\n     * called once it has completed with an error (which can be `null`) and a\n     * transformed value. Invoked with (value, key, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Results is an array of the\n     * transformed items from the `obj`. Invoked with (err, result).\n     * @example\n     *\n     * async.mapValues({\n     *     f1: 'file1',\n     *     f2: 'file2',\n     *     f3: 'file3'\n     * }, function (file, key, callback) {\n     *   fs.stat(file, callback);\n     * }, function(err, result) {\n     *     // results is now a map of stats for each file, e.g.\n     *     // {\n     *     //     f1: [stats for file1],\n     *     //     f2: [stats for file2],\n     *     //     f3: [stats for file3]\n     *     // }\n     * });\n     */\n\n    var mapValues = doLimit(mapValuesLimit, Infinity);\n\n    /**\n     * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n     *\n     * @name mapValuesSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.mapValues]{@link module:Collections.mapValues}\n     * @category Collection\n     * @param {Object} obj - A collection to iterate over.\n     * @param {Function} iteratee - A function to apply to each value in `obj`.\n     * The iteratee is passed a `callback(err, transformed)` which must be called\n     * once it has completed with an error (which can be `null`) and a\n     * transformed value. Invoked with (value, key, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Result is an object of the\n     * transformed values from the `obj`. Invoked with (err, result).\n     */\n    var mapValuesSeries = doLimit(mapValuesLimit, 1);\n\n    function has(obj, key) {\n        return key in obj;\n    }\n\n    /**\n     * Caches the results of an `async` function. When creating a hash to store\n     * function results against, the callback is omitted from the hash and an\n     * optional hash function can be used.\n     *\n     * If no hash function is specified, the first argument is used as a hash key,\n     * which may work reasonably if it is a string or a data type that converts to a\n     * distinct string. Note that objects and arrays will not behave reasonably.\n     * Neither will cases where the other arguments are significant. In such cases,\n     * specify your own hash function.\n     *\n     * The cache of results is exposed as the `memo` property of the function\n     * returned by `memoize`.\n     *\n     * @name memoize\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {Function} fn - The function to proxy and cache results from.\n     * @param {Function} hasher - An optional function for generating a custom hash\n     * for storing results. It has all the arguments applied to it apart from the\n     * callback, and must be synchronous.\n     * @returns {Function} a memoized version of `fn`\n     * @example\n     *\n     * var slow_fn = function(name, callback) {\n     *     // do something\n     *     callback(null, result);\n     * };\n     * var fn = async.memoize(slow_fn);\n     *\n     * // fn can now be used as if it were slow_fn\n     * fn('some name', function() {\n     *     // callback\n     * });\n     */\n    function memoize(fn, hasher) {\n        var memo = Object.create(null);\n        var queues = Object.create(null);\n        hasher = hasher || identity;\n        var memoized = initialParams(function memoized(args, callback) {\n            var key = hasher.apply(null, args);\n            if (has(memo, key)) {\n                setImmediate$1(function () {\n                    callback.apply(null, memo[key]);\n                });\n            } else if (has(queues, key)) {\n                queues[key].push(callback);\n            } else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([rest(function (args) {\n                    memo[key] = args;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                        q[i].apply(null, args);\n                    }\n                })]));\n            }\n        });\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    }\n\n    /**\n     * Calls `callback` on a later loop around the event loop. In Node.js this just\n     * calls `setImmediate`.  In the browser it will use `setImmediate` if\n     * available, otherwise `setTimeout(callback, 0)`, which means other higher\n     * priority events may precede the execution of `callback`.\n     *\n     * This is used internally for browser-compatibility purposes.\n     *\n     * @name nextTick\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @alias setImmediate\n     * @category Util\n     * @param {Function} callback - The function to call on a later loop around\n     * the event loop. Invoked with (args...).\n     * @param {...*} args... - any number of additional arguments to pass to the\n     * callback on the next tick.\n     * @example\n     *\n     * var call_order = [];\n     * async.nextTick(function() {\n     *     call_order.push('two');\n     *     // call_order now equals ['one','two']\n     * });\n     * call_order.push('one');\n     *\n     * async.setImmediate(function (a, b, c) {\n     *     // a, b, and c equal 1, 2, and 3\n     * }, 1, 2, 3);\n     */\n    var _defer$1;\n\n    if (hasNextTick) {\n        _defer$1 = process.nextTick;\n    } else if (hasSetImmediate) {\n        _defer$1 = setImmediate;\n    } else {\n        _defer$1 = fallback;\n    }\n\n    var nextTick = wrap(_defer$1);\n\n    function _parallel(eachfn, tasks, callback) {\n        callback = callback || noop;\n        var results = isArrayLike(tasks) ? [] : {};\n\n        eachfn(tasks, function (task, key, callback) {\n            task(rest(function (err, args) {\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                results[key] = args;\n                callback(err);\n            }));\n        }, function (err) {\n            callback(err, results);\n        });\n    }\n\n    /**\n     * Run the `tasks` collection of functions in parallel, without waiting until\n     * the previous function has completed. If any of the functions pass an error to\n     * its callback, the main `callback` is immediately called with the value of the\n     * error. Once the `tasks` have completed, the results are passed to the final\n     * `callback` as an array.\n     *\n     * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n     * parallel execution of code.  If your tasks do not use any timers or perform\n     * any I/O, they will actually be executed in series.  Any synchronous setup\n     * sections for each task will happen one after the other.  JavaScript remains\n     * single-threaded.\n     *\n     * It is also possible to use an object instead of an array. Each property will\n     * be run as a function and the results will be passed to the final `callback`\n     * as an object instead of an array. This can be a more readable way of handling\n     * results from {@link async.parallel}.\n     *\n     * @name parallel\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array|Iterable|Object} tasks - A collection containing functions to run.\n     * Each function is passed a `callback(err, result)` which it must call on\n     * completion with an error `err` (which can be `null`) and an optional `result`\n     * value.\n     * @param {Function} [callback] - An optional callback to run once all the\n     * functions have completed successfully. This function gets a results array\n     * (or object) containing all the result arguments passed to the task callbacks.\n     * Invoked with (err, results).\n     * @example\n     * async.parallel([\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ],\n     * // optional callback\n     * function(err, results) {\n     *     // the results array will equal ['one','two'] even though\n     *     // the second function had a shorter timeout.\n     * });\n     *\n     * // an example using an object instead of an array\n     * async.parallel({\n     *     one: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 1);\n     *         }, 200);\n     *     },\n     *     two: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 2);\n     *         }, 100);\n     *     }\n     * }, function(err, results) {\n     *     // results is now equals to: {one: 1, two: 2}\n     * });\n     */\n    function parallelLimit(tasks, callback) {\n      _parallel(eachOf, tasks, callback);\n    }\n\n    /**\n     * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name parallelLimit\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.parallel]{@link module:ControlFlow.parallel}\n     * @category Control Flow\n     * @param {Array|Collection} tasks - A collection containing functions to run.\n     * Each function is passed a `callback(err, result)` which it must call on\n     * completion with an error `err` (which can be `null`) and an optional `result`\n     * value.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} [callback] - An optional callback to run once all the\n     * functions have completed successfully. This function gets a results array\n     * (or object) containing all the result arguments passed to the task callbacks.\n     * Invoked with (err, results).\n     */\n    function parallelLimit$1(tasks, limit, callback) {\n      _parallel(_eachOfLimit(limit), tasks, callback);\n    }\n\n    /**\n     * A queue of tasks for the worker function to complete.\n     * @typedef {Object} QueueObject\n     * @memberOf module:ControlFlow\n     * @property {Function} length - a function returning the number of items\n     * waiting to be processed. Invoke with `queue.length()`.\n     * @property {boolean} started - a boolean indicating whether or not any\n     * items have been pushed and processed by the queue.\n     * @property {Function} running - a function returning the number of items\n     * currently being processed. Invoke with `queue.running()`.\n     * @property {Function} workersList - a function returning the array of items\n     * currently being processed. Invoke with `queue.workersList()`.\n     * @property {Function} idle - a function returning false if there are items\n     * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n     * @property {number} concurrency - an integer for determining how many `worker`\n     * functions should be run in parallel. This property can be changed after a\n     * `queue` is created to alter the concurrency on-the-fly.\n     * @property {Function} push - add a new task to the `queue`. Calls `callback`\n     * once the `worker` has finished processing the task. Instead of a single task,\n     * a `tasks` array can be submitted. The respective callback is used for every\n     * task in the list. Invoke with `queue.push(task, [callback])`,\n     * @property {Function} unshift - add a new task to the front of the `queue`.\n     * Invoke with `queue.unshift(task, [callback])`.\n     * @property {Function} saturated - a callback that is called when the number of\n     * running workers hits the `concurrency` limit, and further tasks will be\n     * queued.\n     * @property {Function} unsaturated - a callback that is called when the number\n     * of running workers is less than the `concurrency` & `buffer` limits, and\n     * further tasks will not be queued.\n     * @property {number} buffer - A minimum threshold buffer in order to say that\n     * the `queue` is `unsaturated`.\n     * @property {Function} empty - a callback that is called when the last item\n     * from the `queue` is given to a `worker`.\n     * @property {Function} drain - a callback that is called when the last item\n     * from the `queue` has returned from the `worker`.\n     * @property {Function} error - a callback that is called when a task errors.\n     * Has the signature `function(error, task)`.\n     * @property {boolean} paused - a boolean for determining whether the queue is\n     * in a paused state.\n     * @property {Function} pause - a function that pauses the processing of tasks\n     * until `resume()` is called. Invoke with `queue.pause()`.\n     * @property {Function} resume - a function that resumes the processing of\n     * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n     * @property {Function} kill - a function that removes the `drain` callback and\n     * empties remaining tasks from the queue forcing it to go idle. Invoke with `queue.kill()`.\n     */\n\n    /**\n     * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n     * `queue` are processed in parallel (up to the `concurrency` limit). If all\n     * `worker`s are in progress, the task is queued until one becomes available.\n     * Once a `worker` completes a `task`, that `task`'s callback is called.\n     *\n     * @name queue\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Function} worker - An asynchronous function for processing a queued\n     * task, which must call its `callback(err)` argument when finished, with an\n     * optional `error` as an argument.  If you want to handle errors from an\n     * individual task, pass a callback to `q.push()`. Invoked with\n     * (task, callback).\n     * @param {number} [concurrency=1] - An `integer` for determining how many\n     * `worker` functions should be run in parallel.  If omitted, the concurrency\n     * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n     * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can\n     * attached as certain properties to listen for specific events during the\n     * lifecycle of the queue.\n     * @example\n     *\n     * // create a queue object with concurrency 2\n     * var q = async.queue(function(task, callback) {\n     *     console.log('hello ' + task.name);\n     *     callback();\n     * }, 2);\n     *\n     * // assign a callback\n     * q.drain = function() {\n     *     console.log('all items have been processed');\n     * };\n     *\n     * // add some items to the queue\n     * q.push({name: 'foo'}, function(err) {\n     *     console.log('finished processing foo');\n     * });\n     * q.push({name: 'bar'}, function (err) {\n     *     console.log('finished processing bar');\n     * });\n     *\n     * // add some items to the queue (batch-wise)\n     * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n     *     console.log('finished processing item');\n     * });\n     *\n     * // add some items to the front of the queue\n     * q.unshift({name: 'bar'}, function (err) {\n     *     console.log('finished processing bar');\n     * });\n     */\n    function queue$1 (worker, concurrency) {\n      return queue(function (items, cb) {\n        worker(items[0], cb);\n      }, concurrency, 1);\n    }\n\n    /**\n     * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n     * completed in ascending priority order.\n     *\n     * @name priorityQueue\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.queue]{@link module:ControlFlow.queue}\n     * @category Control Flow\n     * @param {Function} worker - An asynchronous function for processing a queued\n     * task, which must call its `callback(err)` argument when finished, with an\n     * optional `error` as an argument.  If you want to handle errors from an\n     * individual task, pass a callback to `q.push()`. Invoked with\n     * (task, callback).\n     * @param {number} concurrency - An `integer` for determining how many `worker`\n     * functions should be run in parallel.  If omitted, the concurrency defaults to\n     * `1`.  If the concurrency is `0`, an error is thrown.\n     * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n     * differences between `queue` and `priorityQueue` objects:\n     * * `push(task, priority, [callback])` - `priority` should be a number. If an\n     *   array of `tasks` is given, all tasks will be assigned the same priority.\n     * * The `unshift` method was removed.\n     */\n    function priorityQueue (worker, concurrency) {\n        // Start with a normal queue\n        var q = queue$1(worker, concurrency);\n\n        // Override push to accept second parameter representing priority\n        q.push = function (data, priority, callback) {\n            if (callback == null) callback = noop;\n            if (typeof callback !== 'function') {\n                throw new Error('task callback must be a function');\n            }\n            q.started = true;\n            if (!isArray(data)) {\n                data = [data];\n            }\n            if (data.length === 0) {\n                // call drain immediately if there are no tasks\n                return setImmediate$1(function () {\n                    q.drain();\n                });\n            }\n\n            priority = priority || 0;\n            var nextNode = q._tasks.head;\n            while (nextNode && priority >= nextNode.priority) {\n                nextNode = nextNode.next;\n            }\n\n            arrayEach(data, function (task) {\n                var item = {\n                    data: task,\n                    priority: priority,\n                    callback: callback\n                };\n\n                if (nextNode) {\n                    q._tasks.insertBefore(nextNode, item);\n                } else {\n                    q._tasks.push(item);\n                }\n            });\n            setImmediate$1(q.process);\n        };\n\n        // Remove unshift function\n        delete q.unshift;\n\n        return q;\n    }\n\n    /**\n     * Runs the `tasks` array of functions in parallel, without waiting until the\n     * previous function has completed. Once any the `tasks` completed or pass an\n     * error to its callback, the main `callback` is immediately called. It's\n     * equivalent to `Promise.race()`.\n     *\n     * @name race\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array} tasks - An array containing functions to run. Each function\n     * is passed a `callback(err, result)` which it must call on completion with an\n     * error `err` (which can be `null`) and an optional `result` value.\n     * @param {Function} callback - A callback to run once any of the functions have\n     * completed. This function gets an error or result from the first function that\n     * completed. Invoked with (err, result).\n     * @returns undefined\n     * @example\n     *\n     * async.race([\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ],\n     * // main callback\n     * function(err, result) {\n     *     // the result will be equal to 'two' as it finishes earlier\n     * });\n     */\n    function race(tasks, callback) {\n        callback = once(callback || noop);\n        if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n        if (!tasks.length) return callback();\n        arrayEach(tasks, function (task) {\n            task(callback);\n        });\n    }\n\n    var slice = Array.prototype.slice;\n\n    /**\n     * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n     *\n     * @name reduceRight\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.reduce]{@link module:Collections.reduce}\n     * @alias foldr\n     * @category Collection\n     * @param {Array} array - A collection to iterate over.\n     * @param {*} memo - The initial state of the reduction.\n     * @param {Function} iteratee - A function applied to each item in the\n     * array to produce the next step in the reduction. The `iteratee` is passed a\n     * `callback(err, reduction)` which accepts an optional error as its first\n     * argument, and the state of the reduction as the second. If an error is\n     * passed to the callback, the reduction is stopped and the main `callback` is\n     * immediately called with the error. Invoked with (memo, item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result is the reduced value. Invoked with\n     * (err, result).\n     */\n    function reduceRight(array, memo, iteratee, callback) {\n      var reversed = slice.call(array).reverse();\n      reduce(reversed, memo, iteratee, callback);\n    }\n\n    /**\n     * Wraps the function in another function that always returns data even when it\n     * errors.\n     *\n     * The object returned has either the property `error` or `value`.\n     *\n     * @name reflect\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {Function} fn - The function you want to wrap\n     * @returns {Function} - A function that always passes null to it's callback as\n     * the error. The second argument to the callback will be an `object` with\n     * either an `error` or a `value` property.\n     * @example\n     *\n     * async.parallel([\n     *     async.reflect(function(callback) {\n     *         // do some stuff ...\n     *         callback(null, 'one');\n     *     }),\n     *     async.reflect(function(callback) {\n     *         // do some more stuff but error ...\n     *         callback('bad stuff happened');\n     *     }),\n     *     async.reflect(function(callback) {\n     *         // do some more stuff ...\n     *         callback(null, 'two');\n     *     })\n     * ],\n     * // optional callback\n     * function(err, results) {\n     *     // values\n     *     // results[0].value = 'one'\n     *     // results[1].error = 'bad stuff happened'\n     *     // results[2].value = 'two'\n     * });\n     */\n    function reflect(fn) {\n        return initialParams(function reflectOn(args, reflectCallback) {\n            args.push(rest(function callback(err, cbArgs) {\n                if (err) {\n                    reflectCallback(null, {\n                        error: err\n                    });\n                } else {\n                    var value = null;\n                    if (cbArgs.length === 1) {\n                        value = cbArgs[0];\n                    } else if (cbArgs.length > 1) {\n                        value = cbArgs;\n                    }\n                    reflectCallback(null, {\n                        value: value\n                    });\n                }\n            }));\n\n            return fn.apply(this, args);\n        });\n    }\n\n    function reject$1(eachfn, arr, iteratee, callback) {\n        _filter(eachfn, arr, function (value, cb) {\n            iteratee(value, function (err, v) {\n                if (err) {\n                    cb(err);\n                } else {\n                    cb(null, !v);\n                }\n            });\n        }, callback);\n    }\n\n    /**\n     * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n     *\n     * @name reject\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.filter]{@link module:Collections.filter}\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     * @example\n     *\n     * async.reject(['file1','file2','file3'], function(filePath, callback) {\n     *     fs.access(filePath, function(err) {\n     *         callback(null, !err)\n     *     });\n     * }, function(err, results) {\n     *     // results now equals an array of missing files\n     *     createFiles(results);\n     * });\n     */\n    var reject = doParallel(reject$1);\n\n    /**\n     * A helper function that wraps an array or an object of functions with reflect.\n     *\n     * @name reflectAll\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @see [async.reflect]{@link module:Utils.reflect}\n     * @category Util\n     * @param {Array} tasks - The array of functions to wrap in `async.reflect`.\n     * @returns {Array} Returns an array of functions, each function wrapped in\n     * `async.reflect`\n     * @example\n     *\n     * let tasks = [\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         // do some more stuff but error ...\n     *         callback(new Error('bad stuff happened'));\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ];\n     *\n     * async.parallel(async.reflectAll(tasks),\n     * // optional callback\n     * function(err, results) {\n     *     // values\n     *     // results[0].value = 'one'\n     *     // results[1].error = Error('bad stuff happened')\n     *     // results[2].value = 'two'\n     * });\n     *\n     * // an example using an object instead of an array\n     * let tasks = {\n     *     one: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     two: function(callback) {\n     *         callback('two');\n     *     },\n     *     three: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'three');\n     *         }, 100);\n     *     }\n     * };\n     *\n     * async.parallel(async.reflectAll(tasks),\n     * // optional callback\n     * function(err, results) {\n     *     // values\n     *     // results.one.value = 'one'\n     *     // results.two.error = 'two'\n     *     // results.three.value = 'three'\n     * });\n     */\n    function reflectAll(tasks) {\n        var results;\n        if (isArray(tasks)) {\n            results = arrayMap(tasks, reflect);\n        } else {\n            results = {};\n            baseForOwn(tasks, function (task, key) {\n                results[key] = reflect.call(this, task);\n            });\n        }\n        return results;\n    }\n\n    /**\n     * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name rejectLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.reject]{@link module:Collections.reject}\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     */\n    var rejectLimit = doParallelLimit(reject$1);\n\n    /**\n     * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n     *\n     * @name rejectSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.reject]{@link module:Collections.reject}\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     */\n    var rejectSeries = doLimit(rejectLimit, 1);\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant$1(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Attempts to get a successful response from `task` no more than `times` times\n     * before returning an error. If the task is successful, the `callback` will be\n     * passed the result of the successful task. If all attempts fail, the callback\n     * will be passed the error and result (if any) of the final attempt.\n     *\n     * @name retry\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n     * object with `times` and `interval` or a number.\n     * * `times` - The number of attempts to make before giving up.  The default\n     *   is `5`.\n     * * `interval` - The time to wait between retries, in milliseconds.  The\n     *   default is `0`. The interval may also be specified as a function of the\n     *   retry count (see example).\n     * * If `opts` is a number, the number specifies the number of times to retry,\n     *   with the default interval of `0`.\n     * @param {Function} task - A function which receives two arguments: (1) a\n     * `callback(err, result)` which must be called when finished, passing `err`\n     * (which can be `null`) and the `result` of the function's execution, and (2)\n     * a `results` object, containing the results of the previously executed\n     * functions (if nested inside another control flow). Invoked with\n     * (callback, results).\n     * @param {Function} [callback] - An optional callback which is called when the\n     * task has succeeded, or after the final failed attempt. It receives the `err`\n     * and `result` arguments of the last attempt at completing the `task`. Invoked\n     * with (err, results).\n     * @example\n     *\n     * // The `retry` function can be used as a stand-alone control flow by passing\n     * // a callback, as shown below:\n     *\n     * // try calling apiMethod 3 times\n     * async.retry(3, apiMethod, function(err, result) {\n     *     // do something with the result\n     * });\n     *\n     * // try calling apiMethod 3 times, waiting 200 ms between each retry\n     * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n     *     // do something with the result\n     * });\n     *\n     * // try calling apiMethod 10 times with exponential backoff\n     * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n     * async.retry({\n     *   times: 10,\n     *   interval: function(retryCount) {\n     *     return 50 * Math.pow(2, retryCount);\n     *   }\n     * }, apiMethod, function(err, result) {\n     *     // do something with the result\n     * });\n     *\n     * // try calling apiMethod the default 5 times no delay between each retry\n     * async.retry(apiMethod, function(err, result) {\n     *     // do something with the result\n     * });\n     *\n     * // It can also be embedded within other control flow functions to retry\n     * // individual methods that are not as reliable, like this:\n     * async.auto({\n     *     users: api.getUsers.bind(api),\n     *     payments: async.retry(3, api.getPayments.bind(api))\n     * }, function(err, results) {\n     *     // do something with the results\n     * });\n     */\n    function retry(opts, task, callback) {\n        var DEFAULT_TIMES = 5;\n        var DEFAULT_INTERVAL = 0;\n\n        var options = {\n            times: DEFAULT_TIMES,\n            intervalFunc: constant$1(DEFAULT_INTERVAL)\n        };\n\n        function parseTimes(acc, t) {\n            if (typeof t === 'object') {\n                acc.times = +t.times || DEFAULT_TIMES;\n\n                acc.intervalFunc = typeof t.interval === 'function' ? t.interval : constant$1(+t.interval || DEFAULT_INTERVAL);\n            } else if (typeof t === 'number' || typeof t === 'string') {\n                acc.times = +t || DEFAULT_TIMES;\n            } else {\n                throw new Error(\"Invalid arguments for async.retry\");\n            }\n        }\n\n        if (arguments.length < 3 && typeof opts === 'function') {\n            callback = task || noop;\n            task = opts;\n        } else {\n            parseTimes(options, opts);\n            callback = callback || noop;\n        }\n\n        if (typeof task !== 'function') {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n\n        var attempt = 1;\n        function retryAttempt() {\n            task(function (err) {\n                if (err && attempt++ < options.times) {\n                    setTimeout(retryAttempt, options.intervalFunc(attempt));\n                } else {\n                    callback.apply(null, arguments);\n                }\n            });\n        }\n\n        retryAttempt();\n    }\n\n    /**\n     * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method wraps a task and makes it\n     * retryable, rather than immediately calling it with retries.\n     *\n     * @name retryable\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.retry]{@link module:ControlFlow.retry}\n     * @category Control Flow\n     * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n     * options, exactly the same as from `retry`\n     * @param {Function} task - the asynchronous function to wrap\n     * @returns {Functions} The wrapped function, which when invoked, will retry on\n     * an error, based on the parameters specified in `opts`.\n     * @example\n     *\n     * async.auto({\n     *     dep1: async.retryable(3, getFromFlakyService),\n     *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n     *         maybeProcessData(results.dep1, cb);\n     *     })]\n     * }, callback);\n     */\n    function retryable (opts, task) {\n        if (!task) {\n            task = opts;\n            opts = null;\n        }\n        return initialParams(function (args, callback) {\n            function taskFn(cb) {\n                task.apply(null, args.concat([cb]));\n            }\n\n            if (opts) retry(opts, taskFn, callback);else retry(taskFn, callback);\n        });\n    }\n\n    /**\n     * Run the functions in the `tasks` collection in series, each one running once\n     * the previous function has completed. If any functions in the series pass an\n     * error to its callback, no more functions are run, and `callback` is\n     * immediately called with the value of the error. Otherwise, `callback`\n     * receives an array of results when `tasks` have completed.\n     *\n     * It is also possible to use an object instead of an array. Each property will\n     * be run as a function, and the results will be passed to the final `callback`\n     * as an object instead of an array. This can be a more readable way of handling\n     *  results from {@link async.series}.\n     *\n     * **Note** that while many implementations preserve the order of object\n     * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n     * explicitly states that\n     *\n     * > The mechanics and order of enumerating the properties is not specified.\n     *\n     * So if you rely on the order in which your series of functions are executed,\n     * and want this to work on all platforms, consider using an array.\n     *\n     * @name series\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array|Iterable|Object} tasks - A collection containing functions to run, each\n     * function is passed a `callback(err, result)` it must call on completion with\n     * an error `err` (which can be `null`) and an optional `result` value.\n     * @param {Function} [callback] - An optional callback to run once all the\n     * functions have completed. This function gets a results array (or object)\n     * containing all the result arguments passed to the `task` callbacks. Invoked\n     * with (err, result).\n     * @example\n     * async.series([\n     *     function(callback) {\n     *         // do some stuff ...\n     *         callback(null, 'one');\n     *     },\n     *     function(callback) {\n     *         // do some more stuff ...\n     *         callback(null, 'two');\n     *     }\n     * ],\n     * // optional callback\n     * function(err, results) {\n     *     // results is now equal to ['one', 'two']\n     * });\n     *\n     * async.series({\n     *     one: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 1);\n     *         }, 200);\n     *     },\n     *     two: function(callback){\n     *         setTimeout(function() {\n     *             callback(null, 2);\n     *         }, 100);\n     *     }\n     * }, function(err, results) {\n     *     // results is now equal to: {one: 1, two: 2}\n     * });\n     */\n    function series(tasks, callback) {\n      _parallel(eachOfSeries, tasks, callback);\n    }\n\n    /**\n     * Returns `true` if at least one element in the `coll` satisfies an async test.\n     * If any iteratee call returns `true`, the main `callback` is immediately\n     * called.\n     *\n     * @name some\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias any\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in the array\n     * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n     * be called with a boolean argument once it has completed. Invoked with\n     * (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the iteratee functions have finished.\n     * Result will be either `true` or `false` depending on the values of the async\n     * tests. Invoked with (err, result).\n     * @example\n     *\n     * async.some(['file1','file2','file3'], function(filePath, callback) {\n     *     fs.access(filePath, function(err) {\n     *         callback(null, !err)\n     *     });\n     * }, function(err, result) {\n     *     // if result is true then at least one of the files exists\n     * });\n     */\n    var some = _createTester(eachOf, Boolean, identity);\n\n    /**\n     * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name someLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.some]{@link module:Collections.some}\n     * @alias anyLimit\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - A truth test to apply to each item in the array\n     * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n     * be called with a boolean argument once it has completed. Invoked with\n     * (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the iteratee functions have finished.\n     * Result will be either `true` or `false` depending on the values of the async\n     * tests. Invoked with (err, result).\n     */\n    var someLimit = _createTester(eachOfLimit, Boolean, identity);\n\n    /**\n     * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n     *\n     * @name someSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.some]{@link module:Collections.some}\n     * @alias anySeries\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in the array\n     * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n     * be called with a boolean argument once it has completed. Invoked with\n     * (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the iteratee functions have finished.\n     * Result will be either `true` or `false` depending on the values of the async\n     * tests. Invoked with (err, result).\n     */\n    var someSeries = doLimit(someLimit, 1);\n\n    /**\n     * Sorts a list by the results of running each `coll` value through an async\n     * `iteratee`.\n     *\n     * @name sortBy\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A function to apply to each item in `coll`.\n     * The iteratee is passed a `callback(err, sortValue)` which must be called once\n     * it has completed with an error (which can be `null`) and a value to use as\n     * the sort criteria. Invoked with (item, callback).\n     * @param {Function} callback - A callback which is called after all the\n     * `iteratee` functions have finished, or an error occurs. Results is the items\n     * from the original `coll` sorted by the values returned by the `iteratee`\n     * calls. Invoked with (err, results).\n     * @example\n     *\n     * async.sortBy(['file1','file2','file3'], function(file, callback) {\n     *     fs.stat(file, function(err, stats) {\n     *         callback(err, stats.mtime);\n     *     });\n     * }, function(err, results) {\n     *     // results is now the original array of files sorted by\n     *     // modified date\n     * });\n     *\n     * // By modifying the callback parameter the\n     * // sorting order can be influenced:\n     *\n     * // ascending order\n     * async.sortBy([1,9,3,5], function(x, callback) {\n     *     callback(null, x);\n     * }, function(err,result) {\n     *     // result callback\n     * });\n     *\n     * // descending order\n     * async.sortBy([1,9,3,5], function(x, callback) {\n     *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n     * }, function(err,result) {\n     *     // result callback\n     * });\n     */\n    function sortBy(coll, iteratee, callback) {\n        map(coll, function (x, callback) {\n            iteratee(x, function (err, criteria) {\n                if (err) return callback(err);\n                callback(null, { value: x, criteria: criteria });\n            });\n        }, function (err, results) {\n            if (err) return callback(err);\n            callback(null, arrayMap(results.sort(comparator), baseProperty('value')));\n        });\n\n        function comparator(left, right) {\n            var a = left.criteria,\n                b = right.criteria;\n            return a < b ? -1 : a > b ? 1 : 0;\n        }\n    }\n\n    /**\n     * Sets a time limit on an asynchronous function. If the function does not call\n     * its callback within the specified milliseconds, it will be called with a\n     * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n     *\n     * @name timeout\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {Function} asyncFn - The asynchronous function you want to set the\n     * time limit.\n     * @param {number} milliseconds - The specified time limit.\n     * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n     * to timeout Error for more information..\n     * @returns {Function} Returns a wrapped function that can be used with any of\n     * the control flow functions.\n     * @example\n     *\n     * async.timeout(function(callback) {\n     *     doAsyncTask(callback);\n     * }, 1000);\n     */\n    function timeout(asyncFn, milliseconds, info) {\n        var originalCallback, timer;\n        var timedOut = false;\n\n        function injectedCallback() {\n            if (!timedOut) {\n                originalCallback.apply(null, arguments);\n                clearTimeout(timer);\n            }\n        }\n\n        function timeoutCallback() {\n            var name = asyncFn.name || 'anonymous';\n            var error = new Error('Callback function \"' + name + '\" timed out.');\n            error.code = 'ETIMEDOUT';\n            if (info) {\n                error.info = info;\n            }\n            timedOut = true;\n            originalCallback(error);\n        }\n\n        return initialParams(function (args, origCallback) {\n            originalCallback = origCallback;\n            // setup timer and call original function\n            timer = setTimeout(timeoutCallback, milliseconds);\n            asyncFn.apply(null, args.concat(injectedCallback));\n        });\n    }\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil;\n    var nativeMax$1 = Math.max;\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax$1(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name timesLimit\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.times]{@link module:ControlFlow.times}\n     * @category Control Flow\n     * @param {number} count - The number of times to run the function.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - The function to call `n` times. Invoked with the\n     * iteration index and a callback (n, next).\n     * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n     */\n    function timeLimit(count, limit, iteratee, callback) {\n      mapLimit(baseRange(0, count, 1), limit, iteratee, callback);\n    }\n\n    /**\n     * Calls the `iteratee` function `n` times, and accumulates results in the same\n     * manner you would use with [map]{@link module:Collections.map}.\n     *\n     * @name times\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.map]{@link module:Collections.map}\n     * @category Control Flow\n     * @param {number} n - The number of times to run the function.\n     * @param {Function} iteratee - The function to call `n` times. Invoked with the\n     * iteration index and a callback (n, next).\n     * @param {Function} callback - see {@link module:Collections.map}.\n     * @example\n     *\n     * // Pretend this is some complicated async factory\n     * var createUser = function(id, callback) {\n     *     callback(null, {\n     *         id: 'user' + id\n     *     });\n     * };\n     *\n     * // generate 5 users\n     * async.times(5, function(n, next) {\n     *     createUser(n, function(err, user) {\n     *         next(err, user);\n     *     });\n     * }, function(err, users) {\n     *     // we should now have 5 users\n     * });\n     */\n    var times = doLimit(timeLimit, Infinity);\n\n    /**\n     * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n     *\n     * @name timesSeries\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.times]{@link module:ControlFlow.times}\n     * @category Control Flow\n     * @param {number} n - The number of times to run the function.\n     * @param {Function} iteratee - The function to call `n` times. Invoked with the\n     * iteration index and a callback (n, next).\n     * @param {Function} callback - see {@link module:Collections.map}.\n     */\n    var timesSeries = doLimit(timeLimit, 1);\n\n    /**\n     * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n     * element in series, each step potentially mutating an `accumulator` value.\n     * The type of the accumulator defaults to the type of collection passed in.\n     *\n     * @name transform\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Array|Iterable|Object} coll - A collection to iterate over.\n     * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n     * it will default to an empty Object or Array, depending on the type of `coll`\n     * @param {Function} iteratee - A function applied to each item in the\n     * collection that potentially modifies the accumulator. The `iteratee` is\n     * passed a `callback(err)` which accepts an optional error as its first\n     * argument. If an error is passed to the callback, the transform is stopped\n     * and the main `callback` is immediately called with the error.\n     * Invoked with (accumulator, item, key, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result is the transformed accumulator.\n     * Invoked with (err, result).\n     * @example\n     *\n     * async.transform([1,2,3], function(acc, item, index, callback) {\n     *     // pointless async:\n     *     process.nextTick(function() {\n     *         acc.push(item * 2)\n     *         callback(null)\n     *     });\n     * }, function(err, result) {\n     *     // result is now equal to [2, 4, 6]\n     * });\n     *\n     * @example\n     *\n     * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {\n     *     setImmediate(function () {\n     *         obj[key] = val * 2;\n     *         callback();\n     *     })\n     * }, function (err, result) {\n     *     // result is equal to {a: 2, b: 4, c: 6}\n     * })\n     */\n    function transform(coll, accumulator, iteratee, callback) {\n        if (arguments.length === 3) {\n            callback = iteratee;\n            iteratee = accumulator;\n            accumulator = isArray(coll) ? [] : {};\n        }\n        callback = once(callback || noop);\n\n        eachOf(coll, function (v, k, cb) {\n            iteratee(accumulator, v, k, cb);\n        }, function (err) {\n            callback(err, accumulator);\n        });\n    }\n\n    /**\n     * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n     * unmemoized form. Handy for testing.\n     *\n     * @name unmemoize\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @see [async.memoize]{@link module:Utils.memoize}\n     * @category Util\n     * @param {Function} fn - the memoized function\n     * @returns {Function} a function that calls the original unmemoized function\n     */\n    function unmemoize(fn) {\n        return function () {\n            return (fn.unmemoized || fn).apply(null, arguments);\n        };\n    }\n\n    /**\n     * Repeatedly call `fn`, while `test` returns `true`. Calls `callback` when\n     * stopped, or an error occurs.\n     *\n     * @name whilst\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Function} test - synchronous truth test to perform before each\n     * execution of `fn`. Invoked with ().\n     * @param {Function} iteratee - A function which is called each time `test` passes.\n     * The function is passed a `callback(err)`, which must be called once it has\n     * completed with an optional `err` argument. Invoked with (callback).\n     * @param {Function} [callback] - A callback which is called after the test\n     * function has failed and repeated execution of `fn` has stopped. `callback`\n     * will be passed an error and any arguments passed to the final `fn`'s\n     * callback. Invoked with (err, [results]);\n     * @returns undefined\n     * @example\n     *\n     * var count = 0;\n     * async.whilst(\n     *     function() { return count < 5; },\n     *     function(callback) {\n     *         count++;\n     *         setTimeout(function() {\n     *             callback(null, count);\n     *         }, 1000);\n     *     },\n     *     function (err, n) {\n     *         // 5 seconds have passed, n = 5\n     *     }\n     * );\n     */\n    function whilst(test, iteratee, callback) {\n        callback = onlyOnce(callback || noop);\n        if (!test()) return callback(null);\n        var next = rest(function (err, args) {\n            if (err) return callback(err);\n            if (test()) return iteratee(next);\n            callback.apply(null, [null].concat(args));\n        });\n        iteratee(next);\n    }\n\n    /**\n     * Repeatedly call `fn` until `test` returns `true`. Calls `callback` when\n     * stopped, or an error occurs. `callback` will be passed an error and any\n     * arguments passed to the final `fn`'s callback.\n     *\n     * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n     *\n     * @name until\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.whilst]{@link module:ControlFlow.whilst}\n     * @category Control Flow\n     * @param {Function} test - synchronous truth test to perform before each\n     * execution of `fn`. Invoked with ().\n     * @param {Function} fn - A function which is called each time `test` fails.\n     * The function is passed a `callback(err)`, which must be called once it has\n     * completed with an optional `err` argument. Invoked with (callback).\n     * @param {Function} [callback] - A callback which is called after the test\n     * function has passed and repeated execution of `fn` has stopped. `callback`\n     * will be passed an error and any arguments passed to the final `fn`'s\n     * callback. Invoked with (err, [results]);\n     */\n    function until(test, fn, callback) {\n        whilst(function () {\n            return !test.apply(this, arguments);\n        }, fn, callback);\n    }\n\n    /**\n     * Runs the `tasks` array of functions in series, each passing their results to\n     * the next in the array. However, if any of the `tasks` pass an error to their\n     * own callback, the next function is not executed, and the main `callback` is\n     * immediately called with the error.\n     *\n     * @name waterfall\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array} tasks - An array of functions to run, each function is passed\n     * a `callback(err, result1, result2, ...)` it must call on completion. The\n     * first argument is an error (which can be `null`) and any further arguments\n     * will be passed as arguments in order to the next task.\n     * @param {Function} [callback] - An optional callback to run once all the\n     * functions have completed. This will be passed the results of the last task's\n     * callback. Invoked with (err, [results]).\n     * @returns undefined\n     * @example\n     *\n     * async.waterfall([\n     *     function(callback) {\n     *         callback(null, 'one', 'two');\n     *     },\n     *     function(arg1, arg2, callback) {\n     *         // arg1 now equals 'one' and arg2 now equals 'two'\n     *         callback(null, 'three');\n     *     },\n     *     function(arg1, callback) {\n     *         // arg1 now equals 'three'\n     *         callback(null, 'done');\n     *     }\n     * ], function (err, result) {\n     *     // result now equals 'done'\n     * });\n     *\n     * // Or, with named functions:\n     * async.waterfall([\n     *     myFirstFunction,\n     *     mySecondFunction,\n     *     myLastFunction,\n     * ], function (err, result) {\n     *     // result now equals 'done'\n     * });\n     * function myFirstFunction(callback) {\n     *     callback(null, 'one', 'two');\n     * }\n     * function mySecondFunction(arg1, arg2, callback) {\n     *     // arg1 now equals 'one' and arg2 now equals 'two'\n     *     callback(null, 'three');\n     * }\n     * function myLastFunction(arg1, callback) {\n     *     // arg1 now equals 'three'\n     *     callback(null, 'done');\n     * }\n     */\n    function waterfall (tasks, callback) {\n        callback = once(callback || noop);\n        if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n        if (!tasks.length) return callback();\n        var taskIndex = 0;\n\n        function nextTask(args) {\n            if (taskIndex === tasks.length) {\n                return callback.apply(null, [null].concat(args));\n            }\n\n            var taskCallback = onlyOnce(rest(function (err, args) {\n                if (err) {\n                    return callback.apply(null, [err].concat(args));\n                }\n                nextTask(args);\n            }));\n\n            args.push(taskCallback);\n\n            var task = tasks[taskIndex++];\n            task.apply(null, args);\n        }\n\n        nextTask([]);\n    }\n\n    var index = {\n      applyEach: applyEach,\n      applyEachSeries: applyEachSeries,\n      apply: apply$1,\n      asyncify: asyncify,\n      auto: auto,\n      autoInject: autoInject,\n      cargo: cargo,\n      compose: compose,\n      concat: concat,\n      concatSeries: concatSeries,\n      constant: constant,\n      detect: detect,\n      detectLimit: detectLimit,\n      detectSeries: detectSeries,\n      dir: dir,\n      doDuring: doDuring,\n      doUntil: doUntil,\n      doWhilst: doWhilst,\n      during: during,\n      each: eachLimit,\n      eachLimit: eachLimit$1,\n      eachOf: eachOf,\n      eachOfLimit: eachOfLimit,\n      eachOfSeries: eachOfSeries,\n      eachSeries: eachSeries,\n      ensureAsync: ensureAsync,\n      every: every,\n      everyLimit: everyLimit,\n      everySeries: everySeries,\n      filter: filter,\n      filterLimit: filterLimit,\n      filterSeries: filterSeries,\n      forever: forever,\n      log: log,\n      map: map,\n      mapLimit: mapLimit,\n      mapSeries: mapSeries,\n      mapValues: mapValues,\n      mapValuesLimit: mapValuesLimit,\n      mapValuesSeries: mapValuesSeries,\n      memoize: memoize,\n      nextTick: nextTick,\n      parallel: parallelLimit,\n      parallelLimit: parallelLimit$1,\n      priorityQueue: priorityQueue,\n      queue: queue$1,\n      race: race,\n      reduce: reduce,\n      reduceRight: reduceRight,\n      reflect: reflect,\n      reflectAll: reflectAll,\n      reject: reject,\n      rejectLimit: rejectLimit,\n      rejectSeries: rejectSeries,\n      retry: retry,\n      retryable: retryable,\n      seq: seq,\n      series: series,\n      setImmediate: setImmediate$1,\n      some: some,\n      someLimit: someLimit,\n      someSeries: someSeries,\n      sortBy: sortBy,\n      timeout: timeout,\n      times: times,\n      timesLimit: timeLimit,\n      timesSeries: timesSeries,\n      transform: transform,\n      unmemoize: unmemoize,\n      until: until,\n      waterfall: waterfall,\n      whilst: whilst,\n\n      // aliases\n      all: every,\n      any: some,\n      forEach: eachLimit,\n      forEachSeries: eachSeries,\n      forEachLimit: eachLimit$1,\n      forEachOf: eachOf,\n      forEachOfSeries: eachOfSeries,\n      forEachOfLimit: eachOfLimit,\n      inject: reduce,\n      foldl: reduce,\n      foldr: reduceRight,\n      select: filter,\n      selectLimit: filterLimit,\n      selectSeries: filterSeries,\n      wrapSync: asyncify\n    };\n\n    exports['default'] = index;\n    exports.applyEach = applyEach;\n    exports.applyEachSeries = applyEachSeries;\n    exports.apply = apply$1;\n    exports.asyncify = asyncify;\n    exports.auto = auto;\n    exports.autoInject = autoInject;\n    exports.cargo = cargo;\n    exports.compose = compose;\n    exports.concat = concat;\n    exports.concatSeries = concatSeries;\n    exports.constant = constant;\n    exports.detect = detect;\n    exports.detectLimit = detectLimit;\n    exports.detectSeries = detectSeries;\n    exports.dir = dir;\n    exports.doDuring = doDuring;\n    exports.doUntil = doUntil;\n    exports.doWhilst = doWhilst;\n    exports.during = during;\n    exports.each = eachLimit;\n    exports.eachLimit = eachLimit$1;\n    exports.eachOf = eachOf;\n    exports.eachOfLimit = eachOfLimit;\n    exports.eachOfSeries = eachOfSeries;\n    exports.eachSeries = eachSeries;\n    exports.ensureAsync = ensureAsync;\n    exports.every = every;\n    exports.everyLimit = everyLimit;\n    exports.everySeries = everySeries;\n    exports.filter = filter;\n    exports.filterLimit = filterLimit;\n    exports.filterSeries = filterSeries;\n    exports.forever = forever;\n    exports.log = log;\n    exports.map = map;\n    exports.mapLimit = mapLimit;\n    exports.mapSeries = mapSeries;\n    exports.mapValues = mapValues;\n    exports.mapValuesLimit = mapValuesLimit;\n    exports.mapValuesSeries = mapValuesSeries;\n    exports.memoize = memoize;\n    exports.nextTick = nextTick;\n    exports.parallel = parallelLimit;\n    exports.parallelLimit = parallelLimit$1;\n    exports.priorityQueue = priorityQueue;\n    exports.queue = queue$1;\n    exports.race = race;\n    exports.reduce = reduce;\n    exports.reduceRight = reduceRight;\n    exports.reflect = reflect;\n    exports.reflectAll = reflectAll;\n    exports.reject = reject;\n    exports.rejectLimit = rejectLimit;\n    exports.rejectSeries = rejectSeries;\n    exports.retry = retry;\n    exports.retryable = retryable;\n    exports.seq = seq;\n    exports.series = series;\n    exports.setImmediate = setImmediate$1;\n    exports.some = some;\n    exports.someLimit = someLimit;\n    exports.someSeries = someSeries;\n    exports.sortBy = sortBy;\n    exports.timeout = timeout;\n    exports.times = times;\n    exports.timesLimit = timeLimit;\n    exports.timesSeries = timesSeries;\n    exports.transform = transform;\n    exports.unmemoize = unmemoize;\n    exports.until = until;\n    exports.waterfall = waterfall;\n    exports.whilst = whilst;\n    exports.all = every;\n    exports.allLimit = everyLimit;\n    exports.allSeries = everySeries;\n    exports.any = some;\n    exports.anyLimit = someLimit;\n    exports.anySeries = someSeries;\n    exports.find = detect;\n    exports.findLimit = detectLimit;\n    exports.findSeries = detectSeries;\n    exports.forEach = eachLimit;\n    exports.forEachSeries = eachSeries;\n    exports.forEachLimit = eachLimit$1;\n    exports.forEachOf = eachOf;\n    exports.forEachOfSeries = eachOfSeries;\n    exports.forEachOfLimit = eachOfLimit;\n    exports.inject = reduce;\n    exports.foldl = reduce;\n    exports.foldr = reduceRight;\n    exports.select = filter;\n    exports.selectLimit = filterLimit;\n    exports.selectSeries = filterSeries;\n    exports.wrapSync = asyncify;\n\n}));","// gotta keep it within MAX_SAFE_INTEGER\nconst extraDigits = 3\n\nmodule.exports = createRandomId\n\n\nfunction createRandomId(){\n  // 13 time digits\n  var datePart = new Date().getTime()*Math.pow(10, extraDigits)\n  // 3 random digits\n  var extraPart = Math.floor(Math.random()*Math.pow(10, extraDigits))\n  // 16 digits\n  return datePart+extraPart\n}","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","const getRandomId = require('./random-id.js')\nconst extend = require('xtend')\n\nmodule.exports = createPayload\n\n\nfunction createPayload(data){\n  return extend({\n    // defaults\n    id: getRandomId(),\n    jsonrpc: '2.0',\n    params: [],\n    // user-specified\n  }, data)\n}\n","const createPayload = require('../util/create-payload.js')\n\nmodule.exports = SubProvider\n\n// this is the base class for a subprovider -- mostly helpers\n\n\nfunction SubProvider() {\n\n}\n\nSubProvider.prototype.setEngine = function(engine) {\n  const self = this\n  self.engine = engine\n  engine.on('block', function(block) {\n    self.currentBlock = block\n  })\n}\n\nSubProvider.prototype.handleRequest = function(payload, next, end) {\n  throw new Error('Subproviders should override `handleRequest`.')\n}\n\nSubProvider.prototype.emitPayload = function(payload, cb){\n  const self = this\n  self.engine.sendAsync(createPayload(payload), cb)\n}","'use strict';\n\nvar hexTable = (function () {\n    var array = new Array(256);\n    for (var i = 0; i < 256; ++i) {\n        array[i] = '%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase();\n    }\n\n    return array;\n}());\n\nexports.arrayToObject = function (source, options) {\n    var obj = options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nexports.merge = function (target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            target[source] = true;\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = exports.arrayToObject(target, options);\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (Object.prototype.hasOwnProperty.call(acc, key)) {\n            acc[key] = exports.merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nexports.decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nexports.encode = function (str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D || // -\n            c === 0x2E || // .\n            c === 0x5F || // _\n            c === 0x7E || // ~\n            (c >= 0x30 && c <= 0x39) || // 0-9\n            (c >= 0x41 && c <= 0x5A) || // a-z\n            (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)] + hexTable[0x80 | ((c >> 12) & 0x3F)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nexports.compact = function (obj, references) {\n    if (typeof obj !== 'object' || obj === null) {\n        return obj;\n    }\n\n    var refs = references || [];\n    var lookup = refs.indexOf(obj);\n    if (lookup !== -1) {\n        return refs[lookup];\n    }\n\n    refs.push(obj);\n\n    if (Array.isArray(obj)) {\n        var compacted = [];\n\n        for (var i = 0; i < obj.length; ++i) {\n            if (obj[i] && typeof obj[i] === 'object') {\n                compacted.push(exports.compact(obj[i], refs));\n            } else if (typeof obj[i] !== 'undefined') {\n                compacted.push(obj[i]);\n            }\n        }\n\n        return compacted;\n    }\n\n    var keys = Object.keys(obj);\n    for (var j = 0; j < keys.length; ++j) {\n        var key = keys[j];\n        obj[key] = exports.compact(obj[key], refs);\n    }\n\n    return obj;\n};\n\nexports.isRegExp = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nexports.isBuffer = function (obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n","'use strict';\n\nvar Utils = require('./utils');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar defaults = {\n    delimiter: '&',\n    strictNullHandling: false,\n    skipNulls: false,\n    encode: true,\n    encoder: Utils.encode\n};\n\nvar stringify = function stringify(object, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = obj.toISOString();\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder ? encoder(prefix) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || Utils.isBuffer(obj)) {\n        if (encoder) {\n            return [encoder(prefix) + '=' + encoder(obj)];\n        }\n        return [prefix + '=' + String(obj)];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(obj[key], generateArrayPrefix(prefix, key), generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots));\n        } else {\n            values = values.concat(stringify(obj[key], prefix + (allowDots ? '.' + key : '[' + key + ']'), generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts || {};\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = encode ? (typeof options.encoder === 'function' ? options.encoder : defaults.encoder) : null;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var objKeys;\n    var filter;\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        objKeys = filter = options.filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(obj[key], key, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots));\n    }\n\n    return keys.join(delimiter);\n};\n","'use strict';\n\nvar Utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    delimiter: '&',\n    depth: 5,\n    arrayLimit: 20,\n    parameterLimit: 1000,\n    strictNullHandling: false,\n    plainObjects: false,\n    allowPrototypes: false,\n    allowDots: false,\n    decoder: Utils.decode\n};\n\nvar parseValues = function parseValues(str, options) {\n    var obj = {};\n    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos));\n            val = options.decoder(part.slice(pos + 1));\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function parseObject(chain, val, options) {\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj;\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(parseObject(chain, val, options));\n    } else {\n        obj = options.plainObjects ? Object.create(null) : {};\n        var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;\n        var index = parseInt(cleanRoot, 10);\n        if (\n            !isNaN(index) &&\n            root !== cleanRoot &&\n            String(index) === cleanRoot &&\n            index >= 0 &&\n            (options.parseArrays && index <= options.arrayLimit)\n        ) {\n            obj = [];\n            obj[index] = parseObject(chain, val, options);\n        } else {\n            obj[cleanRoot] = parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\nvar parseKeys = function parseKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^\\.\\[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var parent = /^([^\\[\\]]*)/;\n    var child = /(\\[[^\\[\\]]*\\])/g;\n\n    // Get the parent\n\n    var segment = parent.exec(key);\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (segment[1]) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, segment[1])) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(segment[1]);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].replace(/\\[|\\]/g, ''))) {\n            if (!options.allowPrototypes) {\n                continue;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts || {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.delimiter = typeof options.delimiter === 'string' || Utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = Utils.merge(obj, newObj, options);\n    }\n\n    return Utils.compact(obj);\n};\n","'use strict';\n\nvar Stringify = require('./stringify');\nvar Parse = require('./parse');\n\nmodule.exports = {\n    stringify: Stringify,\n    parse: Parse\n};\n","if (typeof window !== \"undefined\") {\n    module.exports = window;\n} else if (typeof global !== \"undefined\") {\n    module.exports = global;\n} else if (typeof self !== \"undefined\"){\n    module.exports = self;\n} else {\n    module.exports = {};\n}\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n","var isFunction = require('is-function')\n\nmodule.exports = forEach\n\nvar toString = Object.prototype.toString\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction forEach(list, iterator, context) {\n    if (!isFunction(iterator)) {\n        throw new TypeError('iterator must be a function')\n    }\n\n    if (arguments.length < 3) {\n        context = this\n    }\n    \n    if (toString.call(list) === '[object Array]')\n        forEachArray(list, iterator, context)\n    else if (typeof list === 'string')\n        forEachString(list, iterator, context)\n    else\n        forEachObject(list, iterator, context)\n}\n\nfunction forEachArray(array, iterator, context) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            iterator.call(context, array[i], i, array)\n        }\n    }\n}\n\nfunction forEachString(string, iterator, context) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        iterator.call(context, string.charAt(i), i, string)\n    }\n}\n\nfunction forEachObject(object, iterator, context) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            iterator.call(context, object[k], k, object)\n        }\n    }\n}\n","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            loadFunc()\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    var failureResponse = {\n                body: undefined,\n                headers: {},\n                statusCode: 0,\n                method: method,\n                url: uri,\n                rawRequest: xhr\n            }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data || null\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n\n    if (\"json\" in options) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            aborted=true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    xhr.send(body)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.status === 204 && xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n","const xhr = process.browser ? require('xhr') : require('request')\nconst inherits = require('util').inherits\nconst createPayload = require('../util/create-payload.js')\nconst Subprovider = require('./subprovider.js')\n\nmodule.exports = RpcSource\n\ninherits(RpcSource, Subprovider)\n\nfunction RpcSource(opts) {\n  const self = this\n  self.rpcUrl = opts.rpcUrl\n}\n\n\nRpcSource.prototype.handleRequest = function(payload, next, end){\n  const self = this\n  var targetUrl = self.rpcUrl\n  var method = payload.method\n  var params = payload.params\n\n  // new payload with random large id,\n  // so as not to conflict with other concurrent users\n  var newPayload = createPayload(payload)\n\n  // console.log('------------------ network attempt -----------------')\n  // console.log(payload)\n  // console.log('---------------------------------------------')\n\n  xhr({\n    uri: targetUrl,\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(newPayload),\n    rejectUnauthorized: false,\n  }, function(err, res, body) {\n    if (err) return end(err)\n\n    // parse response into raw account\n    var data\n    try {\n      data = JSON.parse(body)\n      if (data.error) return end(data.error)\n    } catch (err) {\n      console.error(err.stack)\n      return end(err)\n    }\n\n    // console.log('network:', payload.method, payload.params, '->', data.result)\n\n    end(null, data.result)\n  })\n\n}\n"],"names":["this","commonjsHelpers.commonjsGlobal","const","arguments","commonjsHelpers.interopDefault","window"],"mappings":"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"}